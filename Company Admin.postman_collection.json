{
	"info": {
		"_postman_id": "36a82d2f-5d18-4a9c-a3ec-b36223784965",
		"name": "Company Admin",
		"description": "Here I included all the Apis under the Company admin dashboard.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32086188",
		"_collection_link": "https://grey-station-233986.postman.co/workspace/React-Admin-V1~2d44aa0d-2cb3-4c3d-856c-26c37b0ba74e/collection/32086188-36a82d2f-5d18-4a9c-a3ec-b36223784965?action=share&source=collection_link&creator=32086188"
	},
	"item": [
		{
			"name": "Happy Path-Company Admin",
			"item": [
				{
					"name": "Site Admin",
					"item": [
						{
							"name": "add site admin With login SSO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"test121212\",\r\n    \"middlename\": \"test121212\",\r\n    \"lastname\": \"test121212\",\r\n    \"email\": \"test121212@gmail.com\",\r\n    \"password\": \"_!rT@8#^82!H@I\",\r\n    \"repeatPassword\": \"_!rT@8#^82!H@I\",\r\n    \"role\": \"siteadmin\",\r\n    \"instructor\": true,\r\n    \"companyid\": \"{{CompIDWithCompAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/add-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"add-user"
									]
								}
							},
							"response": []
						},
						{
							"name": "add site admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"DemoApiSiteAdmin11\",\r\n    \"middlename\": \"DemoApiSiteAdmin11\",\r\n    \"lastname\": \"DemoApiSiteAdmin11\",\r\n    \"email\": \"demositeadmintest11@gmail.com\",\r\n    \"password\": \"Demositeadmintest11@123\",\r\n    \"repeatPassword\": \"Demositeadmintest11@123\",\r\n    \"role\": \"siteadmin\",\r\n    \"instructor\": true,\r\n    \"companyid\": \"{{CompIDWithCompAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/add-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"add-user"
									]
								}
							},
							"response": []
						},
						{
							"name": "get all site admins",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"const resdata = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify response body structure\", function () {\r",
											"    pm.expect(resdata).to.have.all.keys(\"draw\", \"recordsTotal\", \"recordsFiltered\", \"data\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify structure of each record\", function () {\r",
											"    if (resdata.data.length > 0) {\r",
											"        resdata.data.forEach(function (record) {\r",
											"            pm.expect(record).to.have.all.keys(\"middlename\", \"role\", \"_id\", \"firstname\", \"lastname\", \"email\");\r",
											"        });\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"if (resdata.data.length > 0) {\r",
											"    console.log(resdata.data[0]._id);\r",
											"    pm.environment.set(\"FirstSiteAdminInListOfSiteAdmins\", resdata.data[0]._id);\r",
											"    \r",
											"} else {\r",
											"    console.log(\"First record is empty. No admin ID to set as a collection variable.\");\r",
											"}\r",
											"if (resdata.data.length > 1) {\r",
											"    console.log(resdata.data[1]._id);\r",
											"  \r",
											"     pm.collectionVariables.set(\"SecondSiteAdminInListOfSiteAdmins\", resdata.data[1]._id);\r",
											"    \r",
											"} else {\r",
											"    console.log(\"Second record is empty. No admin ID to set as a collection variable.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//console.log(pm.collectionVariables.get(\"token2\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"middlename\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"role\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/users-by-role?role=siteadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"users-by-role"
									],
									"query": [
										{
											"key": "role",
											"value": "siteadmin"
										}
									]
								}
							},
							"response": [
								{
									"name": "get all site admins",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token2}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"middlename\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"role\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://dev-admin.sunrises.io/api/users-by-role?role=companyadmin",
											"protocol": "https",
											"host": [
												"dev-admin",
												"sunrises",
												"io"
											],
											"path": [
												"api",
												"users-by-role"
											],
											"query": [
												{
													"key": "role",
													"value": "companyadmin"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 02 Feb 2024 12:30:40 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "ETag",
											"value": "W/\"167-ua5UDZZD94WnGcYUiCa/YNhEdNI\""
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "request-context",
											"value": "appId=cid-v1:cd124e61-5fda-4b93-be3e-a951e4f3f23a"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Report-To",
											"value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=8xOil6IluzU1ufrkarEQkyzRofKFak5DvyEM2QSnbYbO9ivfMBstySF206IAu4f3FXmcR1CZtUMXJqj8fbtK5O46m7kHHVighqDo%2FQsk75CkrcPgP%2BnM9iLSY36h6wMDnVsXg5IsjI4%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
										},
										{
											"key": "NEL",
											"value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "84f2725c5e5b8009-IAD"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"body": "{\n    \"draw\": 1,\n    \"recordsTotal\": 2,\n    \"recordsFiltered\": 2,\n    \"data\": [\n        {\n            \"middlename\": \"\",\n            \"role\": \"companyadmin\",\n            \"_id\": \"659d27e5ba0d119f0f20001a\",\n            \"firstname\": \"companytest\",\n            \"lastname\": \"updated\",\n            \"email\": \"companytest@gmail.com\"\n        },\n        {\n            \"middlename\": \"test1\",\n            \"role\": \"companyadmin\",\n            \"_id\": \"65a8f646cb0d9a629307b493\",\n            \"firstname\": \"test\",\n            \"lastname\": \"company\",\n            \"email\": \"testcompany1@gmail.com\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "SSO exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responsebody = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body has the expected structure\", function () {\r",
											"    pm.expect(responsebody).to.have.all.keys(\"data\", \"success\");\r",
											"    pm.expect(responsebody.data).to.have.all.keys(\"ssoExists\", \"enableSSO\", \"forceSSO\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/sso-exists",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"sso-exists"
									]
								}
							},
							"response": []
						},
						{
							"name": "get edit site admin details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-user-by-id?id={{SecondSiteAdminInListOfSiteAdmins}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-user-by-id"
									],
									"query": [
										{
											"key": "id",
											"value": "{{SecondSiteAdminInListOfSiteAdmins}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update site admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"_id\": \"{{SecondSiteAdminInListOfSiteAdmins}}\",\r\n    \"firstname\": \"EditSite1\",\r\n    \"middlename\": null,\r\n    \"lastname\": \"EditSite1\",\r\n    \"email\": \"editsite1@v.com\",\r\n    \"password\": \"EditSite@1231\",\r\n    \"repeatPassword\": \"EditSite1@123\",\r\n    \"role\": \"siteadmin\",\r\n    \"instructor\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/update-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"update-user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login to site admin with valid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let sitemail=pm.collectionVariables.get(\"SiteAdminEmail\");\r",
											"console.log(sitemail)\r",
											"\r",
											"if (pm.response.json().data && pm.response.json().data.token) {\r",
											" pm.environment.set(\"SiteAdminToken\", pm.response.json().data.token);\r",
											"    pm.test(\"Successful login: Response body has the expected structure\", function () {\r",
											"        pm.expect(pm.response.json()).to.have.all.keys(\"data\", \"success\");\r",
											"    });\r",
											"\r",
											"    pm.test(\"Successful login: Token is present and not empty\", function () {\r",
											"        pm.expect(pm.response.json().data.token).to.not.be.empty;\r",
											"    });\r",
											"\r",
											"  \r",
											"    pm.test(\"Successful login: Response indicates success\", function () {\r",
											"        pm.expect(pm.response.json().success).to.be.true;\r",
											"    });\r",
											"\r",
											"    pm.test(\"Successful login: User details are correct\", function () {\r",
											"        const user = pm.response.json().data.user;\r",
											"        pm.expect(user).to.have.property(\"firstname\").that.is.a(\"string\");\r",
											"        pm.expect(user).to.have.property(\"lastname\").that.is.a(\"string\");\r",
											"        pm.expect(user.email).to.eql(sitemail)\r",
											"        pm.expect(user).to.have.property(\"middlename\");\r",
											"        pm.expect(user).to.have.property(\"role\").that.is.a(\"string\");\r",
											"        pm.expect(user).to.have.property(\"isActive\");\r",
											"        pm.expect(user).to.have.property(\"loginSSO\");\r",
											"        pm.expect(user).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"        pm.expect(user).to.have.property(\"companyid\").that.is.a(\"string\");\r",
											"      //  pm.expect(user).to.have.property(\"departid\");\r",
											"        pm.expect(user).to.have.property(\"additionalRoles\").that.is.an(\"array\")\r",
											"        pm.expect(user).to.have.property(\"lastLoggedInDate\");\r",
											"        pm.expect(user).to.have.property(\"uuid\").that.is.a(\"string\");\r",
											"    });\r",
											"} \r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const getemail =pm.request.body.toJSON()\r",
											"\r",
											"// Extract values from the request body\r",
											"const email = JSON.parse(getemail.raw);\r",
											"\r",
											"//const password = requestBody.password;\r",
											"//const rememberMe = requestBody.rememberMe;\r",
											"console.log(email.email)\r",
											"// Set values as collection variables\r",
											"pm.collectionVariables.set(\"SiteAdminEmail\", email.email);\r",
											"//pm.collectionVariables.set(\"password\", password);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"demositeadmintest11@gmail.com\",\r\n    \"password\":\"Demositeadmintest11@123\",\r\n    \"rememberMe\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/auth/sign-in",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"auth",
										"sign-in"
									]
								}
							},
							"response": []
						}
					],
					"description": "Below are the Apis under Site Admin."
				},
				{
					"name": "Sites",
					"item": [
						{
							"name": "add site",
							"item": [
								{
									"name": "get company simulations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response body as JSON\r",
													"const responseData = pm.response.json();\r",
													"\r",
													"// Test cases\r",
													"pm.test(\"Response body is an array\", function () {\r",
													"    pm.expect(responseData).to.be.an(\"array\");\r",
													"});\r",
													"\r",
													"pm.test(\"Each object has the expected structure\", function () {\r",
													"    responseData.forEach(function (obj) {\r",
													"        pm.expect(obj).to.have.all.keys(\"_id\", \"simulationName\");\r",
													"        pm.expect(obj._id).to.be.a(\"string\");\r",
													"        pm.expect(obj.simulationName).to.be.a(\"string\");\r",
													"    });\r",
													"});\r",
													"\r",
													"pm.test(\"Each object's _id is not empty\", function () {\r",
													"    responseData.forEach(function (obj) {\r",
													"        pm.expect(obj._id).to.not.be.empty;\r",
													"    });\r",
													"});\r",
													"\r",
													"pm.test(\"Simulation names are unique\", function () {\r",
													"    const simulationNames = responseData.map(obj => obj.simulationName);\r",
													"    pm.expect(simulationNames).to.have.lengthOf(new Set(simulationNames).size);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{Base URL}}/get-company-simulations",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-company-simulations"
											]
										}
									},
									"response": []
								},
								{
									"name": "get company tutorials",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse the response body as JSON\r",
													"const responseData = pm.response.json();\r",
													"\r",
													"// Test cases\r",
													"pm.test(\"Response body is an array\", function () {\r",
													"    pm.expect(responseData).to.be.an(\"array\");\r",
													"});\r",
													"\r",
													"pm.test(\"Each object has the expected structure\", function () {\r",
													"    responseData.forEach(function (obj) {\r",
													"        pm.expect(obj).to.have.all.keys(\"_id\", \"tutorialName\");\r",
													"        pm.expect(obj._id).to.be.a(\"string\");\r",
													"        pm.expect(obj.tutorialName).to.be.a(\"string\");\r",
													"    });\r",
													"});\r",
													"\r",
													"pm.test(\"Each object's _id is not empty\", function () {\r",
													"    responseData.forEach(function (obj) {\r",
													"        pm.expect(obj._id).to.not.be.empty;\r",
													"    });\r",
													"});\r",
													"\r",
													"pm.test(\"Tutorial names are unique\", function () {\r",
													"    const tutorialNames = responseData.map(obj => obj.tutorialName);\r",
													"    pm.expect(tutorialNames).to.have.lengthOf(new Set(tutorialNames).size);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{Base URL}}/get-company-tutorials",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-company-tutorials"
											]
										}
									},
									"response": []
								},
								{
									"name": "get site admin list",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"const responseData = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Response body is an array\", function () {\r",
													"    pm.expect(responseData).to.be.an(\"array\");\r",
													"});\r",
													"\r",
													"pm.test(\"Each object has the expected structure\", function () {\r",
													"    responseData.forEach(function (obj) {\r",
													"        pm.expect(obj).to.have.all.keys(\"_id\", \"firstname\",\"middlename\", \"lastname\");\r",
													"        pm.expect(obj._id).to.be.a(\"string\");\r",
													"        pm.expect(obj.firstname).to.be.a(\"string\");\r",
													"        pm.expect(obj.lastname).to.be.a(\"string\");\r",
													"    });\r",
													"});\r",
													"\r",
													"pm.test(\"Each object's _id is not empty\", function () {\r",
													"    responseData.forEach(function (obj) {\r",
													"        pm.expect(obj._id).to.not.be.empty;\r",
													"    });\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{Base URL}}/user-list-by-role?cid={{CompIDWithCompAdmin}}&role=siteadmin",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"user-list-by-role"
											],
											"query": [
												{
													"key": "cid",
													"value": "{{CompIDWithCompAdmin}}"
												},
												{
													"key": "role",
													"value": "siteadmin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "add site by filling required fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"const responseData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body has the expected structure\", function () {\r",
													"    pm.expect(responseData).to.have.all.keys(\r",
													"        \"isActive\", \"_id\", \"siteName\", \"location\", \"tutorials\", \"simulations\",\r",
													"        \"companyId\", \"readAdmins\", \"writeAdmins\", \"createdAt\", \"updatedAt\",\r",
													"        \"createdBy\", \"updatedBy\", \"__v\", \"numTutorials\", \"numSimulations\", \"id\"\r",
													"    );\r",
													"});\r",
													"\r",
													"pm.test(\"isActive is true\", function () {\r",
													"    pm.expect(responseData.isActive).to.be.true;\r",
													"});\r",
													" \r",
													"\r",
													"pm.test(\"companyId is not null\", function () {\r",
													"    pm.expect(responseData.companyId).to.not.be.null;\r",
													"});\r",
													"\r",
													"    pm.collectionVariables.set(\"Addsite1ID\", responseData._id);\r",
													"    pm.collectionVariables.set(\"Addsite1Name\",responseData.siteName);\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"siteName\": \"testsite1212\",\r\n    \"location\": null,\r\n    \"tutorials\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"simulations\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"companyId\": \"{{CompIDWithCompAdmin}}\",\r\n    \"readAdmins\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"writeAdmins\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"createdAt\": null,\r\n    \"updatedAt\": null,\r\n    \"createdBy\": null,\r\n    \"updatedBy\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/site",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "add site2 by filling required fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"const responseData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body has the expected structure\", function () {\r",
													"    pm.expect(responseData).to.have.all.keys(\r",
													"        \"isActive\", \"_id\", \"siteName\", \"location\", \"tutorials\", \"simulations\",\r",
													"        \"companyId\", \"readAdmins\", \"writeAdmins\", \"createdAt\", \"updatedAt\",\r",
													"        \"createdBy\", \"updatedBy\", \"__v\", \"numTutorials\", \"numSimulations\", \"id\"\r",
													"    );\r",
													"});\r",
													"\r",
													"pm.test(\"isActive is true\", function () {\r",
													"    pm.expect(responseData.isActive).to.be.true;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"companyId is not null\", function () {\r",
													"    pm.expect(responseData.companyId).to.not.be.null;\r",
													"});\r",
													"\r",
													"    pm.environment.set(\"Addsite2ID\", responseData._id);\r",
													"    pm.environment.set(\"Addsite2Name\",responseData.siteName);\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \r\n    \"siteName\": \"apitestsite\",\r\n    \"location\": \"HYD\",\r\n    \"tutorials\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"simulations\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"companyId\": \"{{CompIDWithCompAdmin}}\",\r\n    \"readAdmins\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"writeAdmins\": [\r\n        {\r\n            \"id\": \"{{FirstSiteAdminInListOfSiteAdmins}}\"\r\n        }\r\n    ],\r\n    \"createdAt\": null,\r\n    \"updatedAt\": null,\r\n    \"createdBy\": null,\r\n    \"updatedBy\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/site",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "get all sites",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Response body is correct\", function () {\r",
													"    pm.expect(jsonData).to.have.property(\"draw\").to.be.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"recordsTotal\").to.be.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"recordsFiltered\").to.be.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"array\");\r",
													"\r",
													"   \r",
													"    if (jsonData.data.length > 0) {\r",
													"        jsonData.data.forEach(function(item) {\r",
													"            pm.expect(item).to.have.property(\"_id\");\r",
													"            pm.expect(item).to.have.property(\"siteName\");\r",
													"            pm.expect(item).to.have.property(\"isActive\").to.be.a(\"boolean\");\r",
													"            pm.expect(item).to.have.property(\"simCount\").to.be.a(\"string\");\r",
													"            pm.expect(item).to.have.property(\"deptCount\").to.be.a(\"string\");\r",
													"            pm.expect(item).to.have.property(\"traineeCount\").to.be.a(\"string\");\r",
													"        });\r",
													"    }\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"siteName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"location\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"simCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"isActive\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"deptCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"traineeCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/get-all-sites",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-all-sites"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "edit site",
							"item": [
								{
									"name": "get company simulations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const resdata = pm.response.json();\r",
													"\r",
													"// Test cases for response structure\r",
													"pm.test(\"Verify response structure\", function () {\r",
													"    pm.expect(resdata).to.be.an(\"array\");\r",
													"\r",
													"    if (resdata.length > 0) {\r",
													"        resdata.forEach(function (record, index) {\r",
													"            pm.expect(record).to.have.keys(\"_id\", \"simulationName\");\r",
													"            pm.expect(record._id).to.be.a(\"string\");\r",
													"            pm.expect(record.simulationName).to.be.a(\"string\");\r",
													"        });\r",
													"    }\r",
													"});\r",
													"\r",
													"// Test case for empty array\r",
													"pm.test(\"Handle empty array\", function () {\r",
													"    if (resdata.length === 0) {\r",
													"        console.log(\"The array is empty.\");\r",
													"        // Handle empty array case here if needed\r",
													"    }\r",
													"});\r",
													"\r",
													"// Test case for status code\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{Base URL}}/get-company-simulations",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-company-simulations"
											]
										}
									},
									"response": []
								},
								{
									"name": "get company tutorials",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const resdata = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Verify response structure\", function () {\r",
													"    pm.expect(resdata).to.be.an(\"array\");\r",
													"\r",
													"    if (resdata.length > 0) {\r",
													"        resdata.forEach(function (record, index) {\r",
													"            pm.expect(record).to.have.keys(\"_id\", \"tutorialName\");\r",
													"            pm.expect(record._id).to.be.a(\"string\");\r",
													"            pm.expect(record.tutorialName).to.be.a(\"string\");\r",
													"        });\r",
													"    }\r",
													"});\r",
													"\r",
													"pm.test(\"Handle empty array\", function () {\r",
													"    if (resdata.length === 0) {\r",
													"        console.log(\"The array is empty.\");\r",
													"       \r",
													"    }\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{Base URL}}/get-company-tutorials",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-company-tutorials"
											]
										}
									},
									"response": []
								},
								{
									"name": "get site to edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Response body is correct\", function () {\r",
													"    pm.expect(jsonData).to.have.property(\"isActive\").to.be.a(\"boolean\");\r",
													"    pm.expect(jsonData).to.have.property(\"_id\").to.be.a(\"string\");\r",
													"    pm.expect(jsonData).to.have.property(\"siteName\").to.be.a(\"string\");\r",
													"    pm.expect(jsonData).to.have.property(\"location\");\r",
													"    pm.expect(jsonData).to.have.property(\"simulations\").to.be.an(\"array\");\r",
													"    pm.expect(jsonData).to.have.property(\"writeAdmins\").to.be.an(\"array\");\r",
													"    pm.expect(jsonData).to.have.property(\"companyId\").to.be.a(\"string\");\r",
													"    pm.expect(jsonData).to.have.property(\"createdAt\")\r",
													"    pm.expect(jsonData).to.have.property(\"createdBy\")\r",
													"    pm.expect(jsonData).to.have.property(\"readAdmins\").to.be.an(\"array\");\r",
													"    pm.expect(jsonData).to.have.property(\"tutorials\").to.be.an(\"array\");\r",
													"    pm.expect(jsonData).to.have.property(\"updatedAt\")\r",
													"    pm.expect(jsonData).to.have.property(\"updatedBy\")\r",
													"    pm.expect(jsonData).to.have.property(\"__v\").to.be.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"numTutorials\").to.be.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"numSimulations\").to.be.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"id\").to.be.a(\"string\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/get-site?_id={{Addsite1ID}}",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-site"
											],
											"query": [
												{
													"key": "_id",
													"value": "{{Addsite1ID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update site",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response body is correct\", function () {\r",
													"    pm.expect(jsonData).to.have.property(\"isActive\").to.be.a(\"boolean\");\r",
													"    pm.expect(jsonData).to.have.property(\"_id\").to.be.a(\"string\");\r",
													"    pm.expect(jsonData).to.have.property(\"siteName\").to.be.a(\"string\");\r",
													"    pm.expect(jsonData).to.have.property(\"location\").to.be.a(\"string\");\r",
													"    pm.expect(jsonData).to.have.property(\"simulations\").to.be.an(\"array\");\r",
													"    pm.expect(jsonData).to.have.property(\"writeAdmins\").to.be.an(\"array\");\r",
													"    pm.expect(jsonData).to.have.property(\"companyId\").to.be.a(\"string\");\r",
													"    pm.expect(jsonData).to.have.property(\"createdAt\")\r",
													"    pm.expect(jsonData).to.have.property(\"createdBy\")\r",
													"    pm.expect(jsonData).to.have.property(\"readAdmins\").to.be.an(\"array\");\r",
													"    pm.expect(jsonData).to.have.property(\"tutorials\").to.be.an(\"array\");\r",
													"    pm.expect(jsonData).to.have.property(\"updatedAt\")\r",
													"    pm.expect(jsonData).to.have.property(\"updatedBy\")\r",
													"    pm.expect(jsonData).to.have.property(\"__v\").to.be.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"numTutorials\").to.be.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"numSimulations\").to.be.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"id\").to.be.a(\"string\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token2}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"_id\": \"{{Addsite1ID}}\",\r\n    \"location\": \"Hydd\",\r\n    \"siteName\": \"editsite\",\r\n    \"simulations\": [],\r\n    \"writeAdmins\": [],\r\n    \"companyId\": \"{{CompIDWithCompAdmin}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/site",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"site"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Department Admins",
					"item": [
						{
							"name": "SSO exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/sso-exists",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"sso-exists"
									]
								}
							},
							"response": []
						},
						{
							"name": "get settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-settings",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "add department admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status is 201 \", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body is correct\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");\r",
											"    pm.expect(jsonData.data).to.have.property(\"message\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData.data).to.have.property(\"departadminid\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"success\").to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Data values are correct\", function () {\r",
											"    pm.expect(jsonData.data.message).to.equal(\"Successfully created new departadmin.\");\r",
											"    pm.expect(jsonData.data.departadminid).to.be.a(\"string\").and.not.empty;\r",
											"});\r",
											"pm.collectionVariables.set(\"AddedDeptAdmin\",jsonData.data.departadminid);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"apisdeptadmin123\",\r\n    \"middlename\": \"apisdeptadmin123\",\r\n    \"lastname\": \"apisdeptadmin123\",\r\n    \"email\": \"apisdeptadmin123@gmail.com\",\r\n    \"password\": \"Deptadmin@123\",\r\n    \"_id\": null,\r\n    \"loginsso\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-departadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-departadmin"
									]
								}
							},
							"response": []
						},
						{
							"name": "add department admin 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status is 201 \", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body is correct\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");\r",
											"    pm.expect(jsonData.data).to.have.property(\"message\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData.data).to.have.property(\"departadminid\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"success\").to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Data values are correct\", function () {\r",
											"    pm.expect(jsonData.data.message).to.equal(\"Successfully created new departadmin.\");\r",
											"    pm.expect(jsonData.data.departadminid).to.be.a(\"string\").and.not.empty;\r",
											"});\r",
											"pm.environment.set(\"AddedDeptAdmin2\",jsonData.data.departadminid);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"demoapideptadmin1\",\r\n    \"middlename\": \"demoapideptadmin1\",\r\n    \"lastname\": \"demoapideptadmin1\",\r\n    \"email\": \"demoapideptadmin1@gmail.com\",\r\n    \"password\": \"Demoapideptadmin1@123\",\r\n    \"_id\": null,\r\n    \"loginsso\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-departadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-departadmin"
									]
								}
							},
							"response": []
						},
						{
							"name": "get a department admin to edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Response status is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body is correct\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");\r",
											"    let data = jsonData.data;\r",
											"    pm.expect(data).to.have.property(\"middlename\").to.be.a(\"string\");\r",
											"    pm.expect(data).to.have.property(\"role\").to.equal(\"departadmin\");\r",
											"    pm.expect(data).to.have.property(\"isActive\")\r",
											"    pm.expect(data).to.have.property(\"loginSSO\")\r",
											"    pm.expect(data).to.have.property(\"_id\").to.be.a(\"string\");\r",
											"    pm.expect(data).to.have.property(\"firstname\").to.be.a(\"string\");\r",
											"    pm.expect(data).to.have.property(\"lastname\").to.be.a(\"string\");\r",
											"    pm.expect(data).to.have.property(\"username\").to.be.a(\"string\");\r",
											"    pm.expect(data).to.have.property(\"password\").to.be.a(\"string\");\r",
											"    pm.expect(data).to.have.property(\"email\").to.be.a(\"string\");\r",
											"    pm.expect(data).to.have.property(\"companyid\").to.be.a(\"string\");\r",
											"    pm.expect(data).to.have.property(\"departid\")\r",
											"    pm.expect(data).to.have.property(\"createdBy\").to.be.a(\"string\");\r",
											"    pm.expect(data).to.have.property(\"additionalRoles\").to.be.an(\"array\");\r",
											"    pm.expect(data).to.have.property(\"createdAt\").to.match(/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/);\r",
											"    pm.expect(data).to.have.property(\"updatedAt\").to.match(/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/);\r",
											"    pm.expect(data).to.have.property(\"__v\").to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-departadmin-withid?_id={{AddedDeptAdmin}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-departadmin-withid"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedDeptAdmin}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update department admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n    \"firstname\": \"Editapisdeptadmin123\",\r\n    \"middlename\": \"Editapisdeptadmin123\",\r\n    \"lastname\": \"Editapisdeptadmin123\",\r\n    \"username\": \"apisdeptadmin123@gmail.com\",\r\n    \"email\": \"apisdeptadmin123@gmail.com\",\r\n    \"password\": \"Apitestadmin@123\",\r\n    \"_id\": \"{{AddedDeptAdmin}}\",\r\n    \"instructor\": true,\r\n    \"loginsso\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/edit-departadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"edit-departadmin"
									]
								}
							},
							"response": []
						},
						{
							"name": "get department admins",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Response status is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body is correct\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"draw\").to.be.a(\"number\");\r",
											"    pm.expect(jsonData).to.have.property(\"recordsTotal\").to.be.a(\"number\");\r",
											"    pm.expect(jsonData).to.have.property(\"recordsFiltered\").to.be.a(\"number\");\r",
											"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"array\");\r",
											"\r",
											"\r",
											"    jsonData.data.forEach(function(item) {\r",
											"        pm.expect(item).to.have.property(\"_id\").to.be.a(\"string\");\r",
											"        pm.expect(item).to.have.property(\"firstname\").to.be.a(\"string\");\r",
											"        pm.expect(item).to.have.property(\"lastname\").to.be.a(\"string\");\r",
											"        pm.expect(item).to.have.property(\"email\").to.be.a(\"string\");\r",
											"        pm.expect(item).to.have.property(\"middlename\").to.be.a(\"string\")\r",
											"    });\r",
											"});\r",
											" if (jsonData.data.length > 0) {\r",
											"        pm.collectionVariables.set(\"EmailOfFirstDeptAdmin\", jsonData.data[0].email);\r",
											"         pm.collectionVariables.set(\"ID_OfFirstDeptAdmin\", jsonData.data[0]._id);\r",
											"    } else {\r",
											"        console.log(\"Data array is empty. No email to set as a collection variable.\");\r",
											"        \r",
											"    }\r",
											"     if (jsonData.data.length > 1) {\r",
											"        pm.environment.set(\"EmailOfSecondDeptAdmin\", jsonData.data[1].email);\r",
											"         pm.environment.set(\"ID_OfSecondDeptAdmin\", jsonData.data[1]._id);\r",
											"    } else {\r",
											"        console.log(\"Less than one department admin pesent.\");\r",
											"        \r",
											"    }\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"middlename\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastLoggedInDate\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-departadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-departadmin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Response status is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body is correct\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");\r",
											"    pm.expect(jsonData.data).to.have.property(\"message\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"success\").to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Data meets specific conditions\", function () {\r",
											"    pm.expect(jsonData.data.message).to.equal(\"Valid Email.\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-user-with-email?searchemail={{RandomString}}&_id=null",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-user-with-email"
									],
									"query": [
										{
											"key": "searchemail",
											"value": "{{RandomString}}"
										},
										{
											"key": "_id",
											"value": "null"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Login to department admin with valid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let deptemail=pm.collectionVariables.get(\"DeptAdminEmail\");\r",
											"console.log(deptemail)\r",
											"if (pm.response.json().data && pm.response.json().data.token) {\r",
											" pm.environment.set(\"DepartmentAdminToken\", pm.response.json().data.token);\r",
											"    pm.test(\"Successful login: Response body has the expected structure\", function () {\r",
											"        pm.expect(pm.response.json()).to.have.all.keys(\"data\", \"success\");\r",
											"    });\r",
											"\r",
											"    pm.test(\"Successful login: Token is present and not empty\", function () {\r",
											"        pm.expect(pm.response.json().data.token).to.not.be.empty;\r",
											"    });\r",
											"\r",
											"  \r",
											"    pm.test(\"Successful login: Response indicates success\", function () {\r",
											"        pm.expect(pm.response.json().success).to.be.true;\r",
											"    });\r",
											"\r",
											"    pm.test(\"Successful login: User details are correct\", function () {\r",
											"        const user = pm.response.json().data.user;\r",
											"        pm.expect(user).to.have.property(\"firstname\").that.is.a(\"string\");\r",
											"        pm.expect(user).to.have.property(\"lastname\").that.is.a(\"string\");\r",
											"        pm.expect(user.email).to.eql(deptemail)\r",
											"        pm.expect(user).to.have.property(\"middlename\");\r",
											"        pm.expect(user).to.have.property(\"role\").that.is.a(\"string\");\r",
											"        pm.expect(user).to.have.property(\"isActive\");\r",
											"        pm.expect(user).to.have.property(\"loginSSO\");\r",
											"        pm.expect(user).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"        pm.expect(user).to.have.property(\"companyid\").that.is.a(\"string\");\r",
											"      //  pm.expect(user).to.have.property(\"departid\");\r",
											"        pm.expect(user).to.have.property(\"additionalRoles\").that.is.an(\"array\")\r",
											"        pm.expect(user).to.have.property(\"lastLoggedInDate\");\r",
											"        pm.expect(user).to.have.property(\"uuid\").that.is.a(\"string\");\r",
											"    });\r",
											"} \r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const getemail =pm.request.body.toJSON()\r",
											"\r",
											"// Extract values from the request body\r",
											"const email = JSON.parse(getemail.raw);\r",
											"\r",
											"//const password = requestBody.password;\r",
											"//const rememberMe = requestBody.rememberMe;\r",
											"console.log(email.email)\r",
											"// Set values as collection variables\r",
											"pm.collectionVariables.set(\"DeptAdminEmail\", email.email);\r",
											"//pm.collectionVariables.set(\"password\", password);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"demoapideptadmin1@gmail.com\",\r\n    \"password\":\"Demoapideptadmin1@123\",\r\n    \"rememberMe\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/auth/sign-in",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"auth",
										"sign-in"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Departments",
					"item": [
						{
							"name": "Create department",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parse the response body\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"// Test for a successful response\r",
											"pm.test(\"Response status is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test the structure of the response body\r",
											"pm.test(\"Response body is correct\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");\r",
											"    pm.expect(jsonData.data).to.have.property(\"message\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData.data).to.have.property(\"department_id\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"success\").to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"// Set department ID as a collection variable\r",
											"pm.collectionVariables.set(\"AddedDepartmentId\", jsonData.data.department_id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Techdeptapi\",\r\n    \"location\": \"Hyd\",\r\n    \"departadmin\": [\r\n        {\r\n            \"username\": \"{{EmailOfFirstDeptAdmin}}\",\r\n            \"id\": \"{{ID_OfFirstDeptAdmin}}\"\r\n        }\r\n    ],\r\n    \"sites\": [\r\n        {\r\n            \"id\": \"{{Addsite1ID}}\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-department",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create department 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parse the response body\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"// Test for a successful response\r",
											"pm.test(\"Response status is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test the structure of the response body\r",
											"pm.test(\"Response body is correct\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");\r",
											"    pm.expect(jsonData.data).to.have.property(\"message\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData.data).to.have.property(\"department_id\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"success\").to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"// Set department ID as a collection variable\r",
											"pm.environment.set(\"AddedDepartmentId_2\", jsonData.data.department_id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Apidept\",\r\n    \"location\": \"Hyd\",\r\n    \"departadmin\": [\r\n        {\r\n            \"username\": \"{{EmailOfSecondDeptAdmin}}\",\r\n            \"id\": \"{{ID_OfSecondDeptAdmin}}\"\r\n        }\r\n    ],\r\n    \"sites\": [\r\n        {\r\n            \"id\": \"{{Addsite2ID}}\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-department",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get departments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body is correct\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"draw\").to.be.a(\"number\");\r",
											"    pm.expect(jsonData).to.have.property(\"recordsTotal\").to.be.a(\"number\");\r",
											"    pm.expect(jsonData).to.have.property(\"recordsFiltered\").to.be.a(\"number\");\r",
											"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"array\")\r",
											"\r",
											"    // Test individual data items\r",
											"    if(jsonData.data.length>0){\r",
											"    jsonData.data.forEach(function(item) {\r",
											"        pm.expect(item).to.have.property(\"_id\").to.be.a(\"string\");\r",
											"        pm.expect(item).to.have.property(\"departmentName\").to.be.a(\"string\");\r",
											"        pm.expect(item).to.have.property(\"location\").to.be.a(\"string\");\r",
											"        pm.expect(item).to.have.property(\"siteName\").to.be.a(\"string\");\r",
											"        pm.expect(item).to.have.property(\"isActive\").to.be.a(\"boolean\");\r",
											"        pm.expect(item).to.have.property(\"traineeCount\")\r",
											"    });\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set(\"FirstDeptOfAllDepts\",jsonData.data[0].departmentName);\r",
											"// pm.collectionVariables.set(\"FirstDeptNameOfAllDepts\",jsonData.data[0].departmentName);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"departmentName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"location\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"isActive\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"siteName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"traineeCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-department",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get department to edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"var responseBody = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set('departadmin_id', responseBody.data.departadmin[0]._id);\r",
											"pm.collectionVariables.set('departadmin_username', responseBody.data.departadmin[0].username);\r",
											"pm.collectionVariables.set('departadmin_id_value', responseBody.data.departadmin[0].id);\r",
											"pm.collectionVariables.set('sites_id', responseBody.data.sites[0]._id);\r",
											"pm.collectionVariables.set('sites_id_value', responseBody.data.sites[0].id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Techdepts\",\r\n    \"location\": \"Hyd\",\r\n    \"departadmin\": [\r\n        {\r\n            \"username\": \"dept11111@gmail.com\",\r\n            \"id\": \"65af54028d7f2c80f60da5ec\"\r\n        }\r\n    ],\r\n    \"sites\": [\r\n        {\r\n            \"id\": \"65af5ad78d7f2c3a090daa93\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-department-with-id?_id={{AddedDepartmentId}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-department-with-id"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedDepartmentId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit department",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.clear()"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body has correct structure\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"isActive\").to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData).to.have.property(\"_id\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"departmentName\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"location\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"companyid\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"departadmin\").to.be.an(\"array\")\r",
											"    pm.expect(jsonData).to.have.property(\"sites\").to.be.an(\"array\").that.is.not.empty;\r",
											"    pm.expect(jsonData).to.have.property(\"createdBy\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"createdAt\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"updatedAt\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"__v\").to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Techdept1001\",\r\n    \"location\": \"Hyd\",\r\n    \"departadmin\": [\r\n        {\r\n            \"_id\": \"{{departadmin_id}}\",\r\n            \"username\": \"{{departadmin_username}}\",\r\n            \"id\": \"{{departadmin_id_value}}\"\r\n        }\r\n    ],\r\n    \"sites\": [\r\n        {\r\n            \"_id\": \"{{sites_id}}\",\r\n            \"id\": \"{{sites_id_value}}\"\r\n        }\r\n    ],\r\n    \"_id\": \"{{AddedDepartmentId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/edit-department",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"edit-department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search departments",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomString(length) {\r",
											"    const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
											"    let randomString = '';\r",
											"\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * charset.length);\r",
											"        randomString += charset[randomIndex];\r",
											"    }\r",
											"\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"// Generate a random string of length 10\r",
											"const randomString = generateRandomString(10);\r",
											"console.log(randomString);\r",
											"pm.collectionVariables.set(\"RandomString\",randomString);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body is correct\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");\r",
											"    pm.expect(jsonData.data).to.have.property(\"message\").to.be.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"success\").to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Data meets specific conditions\", function () {\r",
											"    pm.expect(jsonData.data.message).to.equal(\"Valid Name.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-department-with-name?search_depName={{RandomString}}&_id=null",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-department-with-name"
									],
									"query": [
										{
											"key": "search_depName",
											"value": "{{RandomString}}"
										},
										{
											"key": "_id",
											"value": "null"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get sites",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-sites",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-sites"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get department admins",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-departadmins",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-departadmins"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Trainees",
					"item": [
						{
							"name": "SSO exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"var jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Object has required properties\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('data');\r",
											"    pm.expect(jsonObject).to.have.property('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Data object properties have correct data types\", function () {\r",
											"    pm.expect(jsonObject.data.ssoExists).to.be.a('boolean');\r",
											"    pm.expect(jsonObject.data.enableSSO).to.be.a('boolean');\r",
											"    pm.expect(jsonObject.data.forceSSO).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Value of 'success' property is true\", function () {\r",
											"    pm.expect(jsonObject.success).to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/sso-exists",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"sso-exists"
									]
								}
							},
							"response": []
						},
						{
							"name": "get sites for trainee form",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonArray = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an array\", function () {\r",
											"    pm.expect(jsonArray).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Each object has required properties\", function () {\r",
											"    jsonArray.forEach(function (item) {\r",
											"        pm.expect(item).to.have.property('_id');\r",
											"        pm.expect(item).to.have.property('siteName');\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Data object properties have correct data types\", function () {\r",
											"    jsonArray.forEach(function (item) {\r",
											"        pm.expect(item._id).to.be.a('string');\r",
											"        pm.expect(item.siteName).to.be.a('string');\r",
											"    });\r",
											"});\r",
											"pm.collectionVariables.set(\"FirstSiteID_Trainee\", jsonArray[0]._id);\r",
											"pm.collectionVariables.set(\"FirstSiteName_Trainee\", jsonArray[0].siteName);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-sites",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-sites"
									]
								}
							},
							"response": []
						},
						{
							"name": "get departments based on site",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonArray = pm.response.json();\r",
											"\r",
											"if(jsonArray.length>0){\r",
											"pm.collectionVariables.set(\"FirstDepartmentID_Trainee\", jsonArray[0]._id);\r",
											"pm.collectionVariables.set(\"FirstDepartmentName_Trainee\", jsonArray[0].departmentName);}\r",
											"else (\r",
											"    console.log(\"Empty departments in that site\")\r",
											")\r",
											"\r",
											"pm.test(\"Response is an array\", function () {\r",
											"    pm.expect(jsonArray).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Each object has required properties\", function () {\r",
											"    jsonArray.forEach(function (item) {\r",
											"        pm.expect(item).to.have.property('_id');\r",
											"        pm.expect(item).to.have.property('departmentName');\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Data object properties have correct data types\", function () {\r",
											"    jsonArray.forEach(function (item) {\r",
											"        pm.expect(item._id).to.be.a('string');\r",
											"        pm.expect(item.departmentName).to.be.a('string');\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-site-depts?sid={{FirstSiteID_Trainee}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-site-depts"
									],
									"query": [
										{
											"key": "sid",
											"value": "{{FirstSiteID_Trainee}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Trainee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"var jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Object has required properties\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('data');\r",
											"    pm.expect(jsonObject).to.have.property('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Data object properties have correct data types\", function () {\r",
											"    pm.expect(jsonObject.data.message).to.be.a('string');\r",
											"    pm.expect(jsonObject.data.trainee).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Value of 'success' property is true\", function () {\r",
											"    pm.expect(jsonObject.success).to.be.true;\r",
											"});\r",
											"\r",
											"const trainee=pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"AddedTraineeID\",trainee.data.trainee);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Apitesttrainee1\",\r\n    \"middlename\": \"Apitesttrainee1\",\r\n    \"lastname\": \"Apitesttrainee1\",\r\n    \"email\": \"apitesttrainee1@gmail.com\",\r\n    \"department\": {\r\n        \"_id\": \"{{FirstDepartmentID_Trainee}}\",\r\n        \"departmentName\": \"{{FirstDepartmentName_Trainee}}\"\r\n    },\r\n    \"departid\": \"{{FirstDepartmentID_Trainee}}\",\r\n    \"password\": \"Apitesttrainee1@123\",\r\n    \"site\": {\r\n        \"id\": \"{{FirstSiteID_Trainee}}\",\r\n        \"name\": \"{{FirstSiteName_Trainee}}\"\r\n    },\r\n    \"instructor\": true,\r\n    \"loginSSO\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-trainee",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-trainee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get trainee with Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Object has required properties\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('data');\r",
											"});\r",
											"\r",
											"pm.test(\"Data object properties have correct data types\", function () {\r",
											"    pm.expect(jsonObject.data).to.be.an('object');\r",
											"    pm.expect(jsonObject.data.middlename)\r",
											"    pm.expect(jsonObject.data.isActive).to.be.a('boolean');\r",
											"    pm.expect(jsonObject.data.loginSSO).to.be.a('boolean');\r",
											"    pm.expect(jsonObject.data._id).to.be.a('string');\r",
											"    pm.expect(jsonObject.data.firstname).to.be.a('string');\r",
											"    pm.expect(jsonObject.data.lastname).to.be.a('string');\r",
											"    pm.expect(jsonObject.data.username).to.be.a('string');\r",
											"    pm.expect(jsonObject.data.email).to.be.a('string');\r",
											"    pm.expect(jsonObject.data.departid).to.be.a('string');\r",
											"    pm.expect(jsonObject.data.siteid).to.be.a('string');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-trainee-with-id?_id={{AddedTraineeID}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-trainee-with-id"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedTraineeID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit trainee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Testtrainee101\",\r\n    \"middlename\": \"Testtrainee101\",\r\n    \"lastname\": \"Testtrainee\",\r\n    \"username\": \"testtrainee101@gmail.com\",\r\n    \"email\": \"testtrainee101@gmail.com\",\r\n    \"department\": {\r\n        \"id\": \"{{FirstDepartmentID_Trainee}}\",\r\n        \"departmentName\": \"{{FirstDepartmentName_Trainee}}\",\r\n        \"_id\": \"{{FirstDepartmentID_Trainee}}\"\r\n    },\r\n    \"departid\": \"{{FirstDepartmentID_Trainee}}\",\r\n    \"password\": \"Testtrainee12@123\",\r\n    \"_id\": \"{{AddedTraineeID}}\",\r\n    \"site\": {\r\n        \"id\":\"{{FirstSiteID_Trainee}}\",\r\n        \"name\": \"{{FirstSiteName_Trainee}}\"\r\n    },\r\n    \"instructor\": true,\r\n    \"loginSSO\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/edit-trainee",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"edit-trainee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get trainees",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"departName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastLoggedInDate\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"isActive\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastActiveAt\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"departid\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"siteid\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 3,\r\n            \"dir\": \"des\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-trainee",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-trainee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate/Deactivate Trainee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Object has required properties\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('middlename');\r",
											"    pm.expect(jsonObject).to.have.property('role');\r",
											"    pm.expect(jsonObject).to.have.property('isActive');\r",
											"    pm.expect(jsonObject).to.have.property('loginSSO');\r",
											"    pm.expect(jsonObject).to.have.property('_id');\r",
											"    pm.expect(jsonObject).to.have.property('firstname');\r",
											"    pm.expect(jsonObject).to.have.property('lastname');\r",
											"    pm.expect(jsonObject).to.have.property('username');\r",
											"    pm.expect(jsonObject).to.have.property('password');\r",
											"    pm.expect(jsonObject).to.have.property('email');\r",
											"    pm.expect(jsonObject).to.have.property('additionalRoles');\r",
											"    pm.expect(jsonObject).to.have.property('companyid');\r",
											"    pm.expect(jsonObject).to.have.property('departid');\r",
											"    pm.expect(jsonObject).to.have.property('siteid');\r",
											"    pm.expect(jsonObject).to.have.property('createdBy');\r",
											"    pm.expect(jsonObject).to.have.property('createdAt');\r",
											"    pm.expect(jsonObject).to.have.property('updatedAt');\r",
											"    pm.expect(jsonObject).to.have.property('__v');\r",
											"});\r",
											"\r",
											"pm.test(\"Data object properties have correct data types\", function () {\r",
											"    pm.expect(jsonObject.middlename)\r",
											"    pm.expect(jsonObject.role).to.be.a('string');\r",
											"    pm.expect(jsonObject.isActive).to.be.a('boolean');\r",
											"    pm.expect(jsonObject.loginSSO).to.be.a('boolean');\r",
											"    pm.expect(jsonObject._id).to.be.a('string');\r",
											"    pm.expect(jsonObject.firstname).to.be.a('string');\r",
											"    pm.expect(jsonObject.lastname).to.be.a('string');\r",
											"    pm.expect(jsonObject.username).to.be.a('string');\r",
											"    pm.expect(jsonObject.password).to.be.a('string');\r",
											"    pm.expect(jsonObject.email).to.be.a('string');\r",
											"    pm.expect(jsonObject.additionalRoles).to.be.an('array');\r",
											"    pm.expect(jsonObject.companyid).to.be.a('string');\r",
											"    pm.expect(jsonObject.departid).to.be.a('string');\r",
											"    pm.expect(jsonObject.siteid).to.be.a('string');\r",
											"    pm.expect(jsonObject.createdBy).to.be.a('string');\r",
											"    pm.expect(jsonObject.__v).to.be.a('number');\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"_id\": \"{{AddedTraineeID}}\",\r\n        \"isActive\": false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/activate-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"activate-user"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get company admin details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has correct structure\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");\r",
									"    pm.expect(jsonData.data).to.have.property(\"firstname\").to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data).to.have.property(\"middlename\")\r",
									"    pm.expect(jsonData.data).to.have.property(\"lastname\").to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data).to.have.property(\"username\").to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data).to.have.property(\"email\").to.be.a(\"string\");\r",
									"    pm.expect(jsonData).to.have.property(\"success\").to.be.true;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token2}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/get-user?_id={{AddCompanyAdminID}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-user"
							],
							"query": [
								{
									"key": "_id",
									"value": "{{AddCompanyAdminID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get user guidence",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has correct structure\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"privacypolicy_url\").to.be.a(\"string\");\r",
									"    pm.expect(jsonData).to.have.property(\"quickstartguid_url\").to.be.a(\"string\");\r",
									"    pm.expect(jsonData).to.have.property(\"app_feedback_url\").to.be.a(\"string\");\r",
									"    pm.expect(jsonData).to.have.property(\"usepolicy_url\").to.be.a(\"string\");\r",
									"    pm.expect(jsonData).to.have.property(\"operator_user_guide_url\").to.be.a(\"string\");\r",
									"    pm.expect(jsonData).to.have.property(\"training_aids_url\").to.be.a(\"string\");\r",
									"    pm.expect(jsonData).to.have.property(\"admin_user_guide_url\").to.be.a(\"string\");\r",
									"});\r",
									"\r",
									"// // Test URL validity\r",
									"// pm.test(\"URLs are valid and accessible\", function () {\r",
									"//     const urls = [\r",
									"//         jsonData.privacypolicy_url,\r",
									"//         jsonData.quickstartguid_url,\r",
									"//         jsonData.app_feedback_url,\r",
									"//         jsonData.usepolicy_url,\r",
									"//         jsonData.operator_user_guide_url,\r",
									"//         jsonData.training_aids_url,\r",
									"//         jsonData.admin_user_guide_url\r",
									"//     ];\r",
									"\r",
									"//     urls.forEach(function(url) {\r",
									"//         if (url) {\r",
									"//             pm.expect(url).to.match(/^https?:\\/\\//); // Check URL format\r",
									"//             pm.sendRequest(url, function (err, response) {\r",
									"//                 pm.expect(err).to.be.null; // No error while sending request\r",
									"//                 pm.expect(response).to.have.status(200); // URL returns 200 OK status\r",
									"//             });\r",
									"//         }\r",
									"//     });\r",
									"// });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token2}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/get-help-config",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-help-config"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is an array and has correct structure\", function () {\r",
									"    pm.expect(jsonData).to.be.an(\"array\").that.is.not.empty;\r",
									"    jsonData.forEach(function(item) {\r",
									"        pm.expect(item).to.have.property(\"name\").that.is.a(\"string\");\r",
									"        pm.expect(item).to.have.property(\"count\").that.is.a(\"number\");\r",
									"        pm.expect(item).to.have.property(\"redirectLink\").that.is.a(\"string\");\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"card name values are present\", function () {\r",
									"    const expectedStaticNames = [\"trainees\", \"departments\", \"sites\"];\r",
									"    const actualNames = jsonData.map(item => item.name);\r",
									"    pm.expect(actualNames).to.deep.equal(expectedStaticNames);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token2}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/dashboard",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"dashboard"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update company admin details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"let resdata = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body structure and data types are correct\", function () {\r",
									"    pm.expect(resdata).to.be.an(\"object\");\r",
									"\r",
									"    pm.expect(resdata).to.have.property(\"middlename\").that.is.a(\"string\");\r",
									"    pm.expect(resdata).to.have.property(\"role\").that.is.a(\"string\");\r",
									"    pm.expect(resdata).to.have.property(\"isActive\").that.is.a(\"boolean\");\r",
									"    pm.expect(resdata).to.have.property(\"loginSSO\").that.is.a(\"boolean\");\r",
									"    pm.expect(resdata).to.have.property(\"_id\").that.is.a(\"string\");\r",
									"    pm.expect(resdata).to.have.property(\"firstname\").that.is.a(\"string\");\r",
									"    pm.expect(resdata).to.have.property(\"lastname\").that.is.a(\"string\");\r",
									"    pm.expect(resdata).to.have.property(\"username\").that.is.a(\"string\");\r",
									"    pm.expect(resdata).to.have.property(\"password\").that.is.a(\"string\");\r",
									"    pm.expect(resdata).to.have.property(\"email\").that.is.a(\"string\");\r",
									"    pm.expect(resdata).to.have.property(\"companyid\").that.is.a(\"string\");\r",
									"    pm.expect(resdata).to.have.property(\"departid\");\r",
									"    pm.expect(resdata).to.have.property(\"createdAt\").that.is.a(\"string\");\r",
									"    pm.expect(resdata).to.have.property(\"updatedAt\").that.is.a(\"string\");\r",
									"    pm.expect(resdata).to.have.property(\"additionalRoles\").that.is.an(\"array\");\r",
									"    pm.expect(resdata).to.have.property(\"__v\").that.is.a(\"number\");\r",
									"    pm.expect(resdata).to.have.property(\"lastLoggedInDate\").that.is.a(\"string\");\r",
									"});\r",
									"\r",
									"let requestBody = pm.request.body;\r",
									"let requestData = JSON.parse(requestBody);\r",
									"\r",
									"pm.test(\"Compare request and response data\", function () {\r",
									"    \r",
									"    pm.expect(resdata.firstname).to.equal(requestData.firstname);\r",
									"    pm.expect(resdata.middlename).to.equal(requestData.middlename);\r",
									"    pm.expect(resdata.lastname).to.equal(requestData.lastname);\r",
									"    pm.expect(resdata.email).to.equal(requestData.email);\r",
									"    pm.expect(resdata._id).to.equal(requestData._id);\r",
									"\r",
									"    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token2}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Api test admin\",\r\n    \"middlename\": \"Admin Test123\",\r\n    \"lastname\": \"Test Admin 1001\",\r\n    \"email\": \"apitestadmin1001@gmail.com\",\r\n    \"_id\": \"{{AddCompanyAdminID}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/update-userinfo",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"update-userinfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user simulations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is a valid JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response is not empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.not.be.empty;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/get_user_sim_ids",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get_user_sim_ids"
							]
						}
					},
					"response": []
				},
				{
					"name": "get site admin simulations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response has property 'draw'\", function () {\r",
									"    pm.expect(jsonData).to.have.property('draw');\r",
									"});\r",
									"\r",
									"pm.test(\"Value of 'recordsTotal' is a number\", function () {\r",
									"    pm.expect(jsonData.recordsTotal).to.be.a('number');\r",
									"});\r",
									"pm.test(\"Value of 'recordsFiltered' is a number\", function () {\r",
									"    pm.expect(jsonData.recordsFiltered).to.be.a('number');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Each object in 'data' array has 'name' and 'model' property\", function () {\r",
									"    jsonData.data.forEach(function (item) {\r",
									"        pm.expect(item).to.have.property('name');\r",
									"         pm.expect(item).to.have.property('model');\r",
									"    });\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sids\": [\r\n        \"5f4d61204744e55c849c9171\",\r\n        \"6278b73b584729ee5defeb86\",\r\n        \"62268dea4991cb529235c7c5\",\r\n        \"5d81a04c58ebf809657c85a3\",\r\n        \"6529c7ffd137b713dc4f29db\",\r\n        \"65a0d854c7e2fc1823d32083\",\r\n        \"649cb9a51bcd0449ffae54c5\",\r\n        \"659bce68321c4313efce5ed0\",\r\n        \"6230e799d367e007676a8dcf\",\r\n        \"659b9bad321c4302ccce444f\"\r\n    ],\r\n    \"params\": {\r\n        \"draw\": 1,\r\n        \"columns\": [\r\n            {\r\n                \"data\": \"model\",\r\n                \"name\": \"\",\r\n                \"searchable\": true,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"runCount\",\r\n                \"name\": \"\",\r\n                \"searchable\": false,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"name\",\r\n                \"name\": \"\",\r\n                \"searchable\": true,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"startTime\",\r\n                \"name\": \"\",\r\n                \"searchable\": false,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            }\r\n        ],\r\n        \"order\": [\r\n            {\r\n                \"column\": 0,\r\n                \"dir\": \"asc\"\r\n            }\r\n        ],\r\n        \"start\": 0,\r\n        \"length\": 10,\r\n        \"search\": {\r\n            \"value\": \"\",\r\n            \"regex\": false\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/get-site-admin-sims",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-site-admin-sims"
							]
						}
					},
					"response": []
				},
				{
					"name": "get settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response includes expected keys\", function () {\r",
									"    pm.expect(jsonData).to.have.property('timezone');\r",
									"    pm.expect(jsonData).to.have.property('dateformat');\r",
									"    pm.expect(jsonData).to.have.property('displayName');\r",
									"    pm.expect(jsonData).to.have.property('logoUrl');\r",
									"    pm.expect(jsonData).to.have.property('ssoConfig');\r",
									"});\r",
									"\r",
									"pm.test(\"Data types and formats are as expected\", function () {\r",
									"    pm.expect(jsonData.timezone).to.be.a('string');\r",
									"    pm.expect(jsonData.dateformat).to.be.a('string')\r",
									"    pm.expect(jsonData.displayName).to.be.a('string');\r",
									"    pm.expect(jsonData.logoUrl).to.be.a('string');\r",
									"    pm.expect(jsonData.ssoConfig).to.be.a('string');\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token2}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/get-settings",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all zones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var jsonArray = pm.response.json();\r",
									"\r",
									"pm.test(\"Response is an array\", function () {\r",
									"    pm.expect(jsonArray).to.be.an('array');\r",
									"});\r",
									"\r",
									"pm.test(\"Each object has 'id' and 'name' properties\", function () {\r",
									"    jsonArray.forEach(function (item) {\r",
									"        pm.expect(item).to.have.property('id');\r",
									"        pm.expect(item).to.have.property('name');\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Data types and formats are as expected\", function () {\r",
									"    jsonArray.forEach(function (item) {\r",
									"        pm.expect(item.id).to.be.a('string');\r",
									"        pm.expect(item.name).to.be.a('string');\r",
									"    });\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/all-zones",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"all-zones"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all date formats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/all-date-formats",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"all-date-formats"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all Tutorials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"title\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"state\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"author\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"publishedDate\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"tutorialName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"tutorialDescription\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"totalNumberOfChapters\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"totalTimeOfTraining\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/get-all-tutorials",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-all-tutorials"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get simulation options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var jsonObject = pm.response.json();\r",
									"\r",
									"pm.test(\"Response is an object\", function () {\r",
									"    pm.expect(jsonObject).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test(\"Object has required properties\", function () {\r",
									"    pm.expect(jsonObject).to.have.property('theme');\r",
									"    pm.expect(jsonObject).to.have.property('faceplate');\r",
									"    pm.expect(jsonObject).to.have.property('isTraineeCanChangeFaceplate');\r",
									"});\r",
									"\r",
									"pm.test(\"Data types and formats are as expected\", function () {\r",
									"    pm.expect(jsonObject.theme).to.be.a('string');\r",
									"    pm.expect(jsonObject.faceplate).to.be.a('string');\r",
									"    pm.expect(jsonObject.isTraineeCanChangeFaceplate).to.be.a('boolean');\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/get-simulation-options",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-simulation-options"
							]
						}
					},
					"response": []
				},
				{
					"name": "student runs-Reports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"model\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"exercise\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"startedAt\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"totalTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"runid\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"startTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"stopTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 4,\r\n            \"dir\": \"desc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/student-runs",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"student-runs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trainee Sessions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastLogged\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"startTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"stopTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"model\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"exercise\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 3,\r\n            \"dir\": \"des\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/get-trainee-sessions",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-trainee-sessions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Invalid authentication-Company Admin",
			"item": [
				{
					"name": "Site Admin",
					"item": [
						{
							"name": "get all site admins",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(pm.collectionVariables.get(\"token2\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token2}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"middlename\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"role\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/users-by-role?role=siteadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"users-by-role"
									],
									"query": [
										{
											"key": "role",
											"value": "siteadmin"
										}
									]
								}
							},
							"response": [
								{
									"name": "get all site admins",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token2}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"middlename\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"role\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://dev-admin.sunrises.io/api/users-by-role?role=companyadmin",
											"protocol": "https",
											"host": [
												"dev-admin",
												"sunrises",
												"io"
											],
											"path": [
												"api",
												"users-by-role"
											],
											"query": [
												{
													"key": "role",
													"value": "companyadmin"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 02 Feb 2024 12:30:40 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "ETag",
											"value": "W/\"167-ua5UDZZD94WnGcYUiCa/YNhEdNI\""
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "request-context",
											"value": "appId=cid-v1:cd124e61-5fda-4b93-be3e-a951e4f3f23a"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Report-To",
											"value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=8xOil6IluzU1ufrkarEQkyzRofKFak5DvyEM2QSnbYbO9ivfMBstySF206IAu4f3FXmcR1CZtUMXJqj8fbtK5O46m7kHHVighqDo%2FQsk75CkrcPgP%2BnM9iLSY36h6wMDnVsXg5IsjI4%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
										},
										{
											"key": "NEL",
											"value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "84f2725c5e5b8009-IAD"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"body": "{\n    \"draw\": 1,\n    \"recordsTotal\": 2,\n    \"recordsFiltered\": 2,\n    \"data\": [\n        {\n            \"middlename\": \"\",\n            \"role\": \"companyadmin\",\n            \"_id\": \"659d27e5ba0d119f0f20001a\",\n            \"firstname\": \"companytest\",\n            \"lastname\": \"updated\",\n            \"email\": \"companytest@gmail.com\"\n        },\n        {\n            \"middlename\": \"test1\",\n            \"role\": \"companyadmin\",\n            \"_id\": \"65a8f646cb0d9a629307b493\",\n            \"firstname\": \"test\",\n            \"lastname\": \"company\",\n            \"email\": \"testcompany1@gmail.com\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "add site admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token2}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"DemoApiSiteAdmin\",\r\n    \"middlename\": \"DemoApiSiteAdmin\",\r\n    \"lastname\": \"DemoApiSiteAdmin\",\r\n    \"email\": \"demositeadmin@gmail.com\",\r\n    \"password\": \"Demositeadmin@123\",\r\n    \"repeatPassword\": \"Demositeadmin@123\",\r\n    \"role\": \"siteadmin\",\r\n    \"instructor\": true,\r\n    \"companyid\": \"{{CompIDWithCompAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/add-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"add-user"
									]
								}
							},
							"response": []
						},
						{
							"name": "add site admin With login SSO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"aaa1\",\r\n    \"middlename\": \"aaa1\",\r\n    \"lastname\": \"aaa1\",\r\n    \"email\": \"aaa1@s.com\",\r\n    \"password\": \"9FoW2g)7nn#s3b\",\r\n    \"repeatPassword\": \"9FoW2g)7vv#s3b\",\r\n    \"role\": \"siteadmin\",\r\n    \"instructor\": true,\r\n    \"companyid\": \"{{CompIDWithCompAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/add-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"add-user"
									]
								}
							},
							"response": []
						},
						{
							"name": "SSO exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/sso-exists",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"sso-exists"
									]
								}
							},
							"response": []
						},
						{
							"name": "get edit site admin details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-user-by-id",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-user-by-id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update site admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"_id\": \"{{GetASiteAdminToEdit}}\",\r\n    \"firstname\": \"EditSite11\",\r\n    \"middlename\": null,\r\n    \"lastname\": \"EditSite1\",\r\n    \"email\": \"ass11@v.com\",\r\n    \"password\": \"EditSite@1231\",\r\n    \"repeatPassword\": \"EditSite1@123\",\r\n    \"role\": \"siteadmin\",\r\n    \"instructor\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/update-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"update-user"
									]
								}
							},
							"response": []
						}
					],
					"description": "Below are the Apis under Site Admin."
				},
				{
					"name": "Sites",
					"item": [
						{
							"name": "add site",
							"item": [
								{
									"name": "get company simulations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base URL}}/get-company-simulations",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-company-simulations"
											]
										}
									},
									"response": []
								},
								{
									"name": "get company tutorials",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base URL}}/get-company-tutorials",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-company-tutorials"
											]
										}
									},
									"response": []
								},
								{
									"name": "get site admin list",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base URL}}/user-list-by-role?cid={{CompIDWithCompAdmin}}&role=siteadmin",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"user-list-by-role"
											],
											"query": [
												{
													"key": "cid",
													"value": "{{CompIDWithCompAdmin}}"
												},
												{
													"key": "role",
													"value": "siteadmin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "add site by filling all fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"_id\": null,\r\n    \"siteName\": \"testsite11\",\r\n    \"location\": \"testsite1\",\r\n    \"tutorials\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"simulations\": [\r\n        {\r\n            \"id\": \"659b9bad321c4302ccce444f\"\r\n        }\r\n    ],\r\n    \"companyId\": \"{{CompIDWithCompAdmin}}\",\r\n    \"readAdmins\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"writeAdmins\": [\r\n        {\r\n            \"id\": \"65b9f3146c599896e61eecc5\"\r\n        }\r\n    ],\r\n    \"createdAt\": null,\r\n    \"updatedAt\": null,\r\n    \"createdBy\": null,\r\n    \"updatedBy\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/site",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "add site by filling required fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"_id\": null,\r\n    \"siteName\": \"testnarisite\",\r\n    \"location\": null,\r\n    \"tutorials\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"simulations\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"companyId\": \"{{CompIDWithCompAdmin}}\",\r\n    \"readAdmins\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"writeAdmins\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"createdAt\": null,\r\n    \"updatedAt\": null,\r\n    \"createdBy\": null,\r\n    \"updatedBy\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/site",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "get all sites",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"siteName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"location\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"simCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"isActive\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"deptCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"traineeCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/get-all-sites",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-all-sites"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "edit site",
							"item": [
								{
									"name": "get company simulations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base URL}}/get-company-simulations",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-company-simulations"
											]
										}
									},
									"response": []
								},
								{
									"name": "get company tutorials",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base URL}}/get-company-tutorials",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-company-tutorials"
											]
										}
									},
									"response": []
								},
								{
									"name": "get site to edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/get-site",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-site"
											]
										}
									},
									"response": []
								},
								{
									"name": "update site",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"_id\": \"{{FirstSiteInAllSites}}\",\r\n    \"siteName\": \"testsite11\",\r\n    \"location\": \"testsite1\",\r\n    \"tutorials\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"simulations\": [\r\n        {\r\n            \"id\": \"659b9bad321c4302ccce444f\"\r\n        }\r\n    ],\r\n    \"companyId\": \"65c350333090a85224d0a40a\",\r\n    \"readAdmins\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"writeAdmins\": [\r\n        {\r\n            \"id\": \"65c355f63090a8d958d0ade9\"\r\n        }\r\n    ],\r\n    \"createdAt\": null,\r\n    \"updatedAt\": null,\r\n    \"createdBy\": null,\r\n    \"updatedBy\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/site",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"site"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Department Admins",
					"item": [
						{
							"name": "SSO exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/sso-exists",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"sso-exists"
									]
								}
							},
							"response": []
						},
						{
							"name": "get settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/get-settings",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "add department admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"TestDeptAdmin111\",\r\n    \"lastname\": \"TestDeptAdmin111\",\r\n    \"email\": \"testdeptadmin11111@gmail.com\",\r\n    \"password\": \"Testdeptadmin@123\",\r\n    \"_id\": null,\r\n    \"instructor\": true,\r\n    \"loginsso\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-departadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-departadmin"
									]
								}
							},
							"response": []
						},
						{
							"name": "get a department admin to edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/get-departadmin-withid?_id={{AddedDeptAdmin}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-departadmin-withid"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedDeptAdmin}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update department admin",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"TestDeptAdmin\",\r\n    \"middlename\": \"TestEdit1\",\r\n    \"lastname\": \"TestDeptAdmin\",\r\n    \"username\": \"testdeptadmin@gmail.com\",\r\n    \"email\": \"testdeptadmin@gmail.com\",\r\n    \"password\": \"Testdeptadmin@123\",\r\n    \"_id\": \"{{AddedDeptAdmin}}\",\r\n    \"instructor\": true,\r\n    \"loginsso\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://dev-admin.sunrises.io/api/edit-departadmin",
									"protocol": "https",
									"host": [
										"dev-admin",
										"sunrises",
										"io"
									],
									"path": [
										"api",
										"edit-departadmin"
									]
								}
							},
							"response": []
						},
						{
							"name": "get department admins",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"middlename\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastLoggedInDate\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-departadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-departadmin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/get-user-with-email?searchemail={{RandomString}}&_id=null",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-user-with-email"
									],
									"query": [
										{
											"key": "searchemail",
											"value": "{{RandomString}}"
										},
										{
											"key": "_id",
											"value": "null"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Departments",
					"item": [
						{
							"name": "Create department",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Techdept1212\",\r\n    \"location\": \"Hyd\",\r\n    \"departadmin\": [\r\n        {\r\n            \"username\": \"{{EmailOfFirstDeptAdmin}}\",\r\n            \"id\": \"{{ID_OfFirstDeptAdmin}}\"\r\n        }\r\n    ],\r\n    \"sites\": [\r\n        {\r\n            \"id\": \"{{FirstSiteInAllSites}}\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-department",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get departments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"departmentName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"location\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"isActive\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"siteName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"traineeCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-department",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get department to edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Techdepts\",\r\n    \"location\": \"Hyd\",\r\n    \"departadmin\": [\r\n        {\r\n            \"username\": \"dept11111@gmail.com\",\r\n            \"id\": \"65af54028d7f2c80f60da5ec\"\r\n        }\r\n    ],\r\n    \"sites\": [\r\n        {\r\n            \"id\": \"65af5ad78d7f2c3a090daa93\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-department-with-id?_id={{AddedDepartmentId}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-department-with-id"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedDepartmentId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit department",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.clear()"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Techdept1211\",\r\n    \"location\": \"Hyd\",\r\n    \"departadmin\": [\r\n        {\r\n            \"_id\": \"65ba2c496c59985e751f0b60\",\r\n            \"username\": \"dept11111@gmail.com\",\r\n            \"id\": \"65af54028d7f2c80f60da5ec\"\r\n        }\r\n    ],\r\n    \"sites\": [\r\n        {\r\n            \"_id\": \"65ba2c496c599864e91f0b61\",\r\n            \"id\": \"65af5ad78d7f2c3a090daa93\"\r\n        }\r\n    ],\r\n    \"_id\": \"{{AddedDepartmentId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/edit-department",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"edit-department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search departments",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomString(length) {\r",
											"    const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
											"    let randomString = '';\r",
											"\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * charset.length);\r",
											"        randomString += charset[randomIndex];\r",
											"    }\r",
											"\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"// Generate a random string of length 10\r",
											"const randomString = generateRandomString(10);\r",
											"console.log(randomString);\r",
											"pm.collectionVariables.set(\"RandomString\",randomString);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/get-department-with-name?search_depName={{RandomString}}&_id=null",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-department-with-name"
									],
									"query": [
										{
											"key": "search_depName",
											"value": "{{RandomString}}"
										},
										{
											"key": "_id",
											"value": "null"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get sites",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/get-sites",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-sites"
									]
								}
							},
							"response": []
						},
						{
							"name": "get department admins",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/get-departadmins",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-departadmins"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Trainees",
					"item": [
						{
							"name": "Get trainees",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"departName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastLoggedInDate\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"isActive\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastActiveAt\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"departid\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"siteid\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 3,\r\n            \"dir\": \"des\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-trainee",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-trainee"
									]
								}
							},
							"response": []
						},
						{
							"name": "SSO exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/sso-exists",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"sso-exists"
									]
								}
							},
							"response": []
						},
						{
							"name": "get sites for trainee form",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-sites",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-sites"
									]
								}
							},
							"response": []
						},
						{
							"name": "get departments based on site",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-site-depts?sid={{FirstSiteInAllSites}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-site-depts"
									],
									"query": [
										{
											"key": "sid",
											"value": "{{FirstSiteInAllSites}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Trainee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Apitesttrainee\",\r\n    \"middlename\": \"Apitesttrainee\",\r\n    \"lastname\": \"Apitesttrainee\",\r\n    \"email\": \"apitesttrainee@gmail.com\",\r\n    \"department\": {\r\n        \"_id\": \"{{DeptID_BasedOnSite}}\",\r\n        \"departmentName\": \"{{DeptNameBasedOnSite}}\"\r\n    },\r\n    \"departid\": \"{{DeptID_BasedOnSite}}\",\r\n    \"password\": \"Apitesttrainee@123\",\r\n    \"site\": {\r\n        \"id\": \"{{FirstSiteInAllSites}}\",\r\n        \"name\": \"{{FirstSiteNameInAllSites}}\"\r\n    },\r\n    \"instructor\": true,\r\n    \"loginSSO\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-trainee",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-trainee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get trainee with Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/get-trainee-with-id?_id={{AddedTraineeID}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-trainee-with-id"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedTraineeID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit trainee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Testtrainee121\",\r\n    \"middlename\": \"Testtrainee121\",\r\n    \"lastname\": \"Testtrainee\",\r\n    \"username\": \"testtrainee112@gmail.com\",\r\n    \"email\": \"testtrainee112@gmail.com\",\r\n    \"department\": {\r\n        \"id\": \"{{DeptID_BasedOnSite}}\",\r\n        \"departmentName\": \"{{DeptNameBasedOnSite}}\",\r\n        \"_id\": \"{{DeptID_BasedOnSite}}\"\r\n    },\r\n    \"departid\": \"{{DeptID_BasedOnSite}}\",\r\n    \"password\": \"Testtrainee12@123\",\r\n    \"_id\": \"{{AddedTraineeID}}\",\r\n    \"site\": {\r\n        \"id\":\"{{FirstSiteInAllSites}}\",\r\n        \"name\": \"{{FirstSiteNameInAllSites}}\"\r\n    },\r\n    \"instructor\": true,\r\n    \"loginSSO\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/edit-trainee",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"edit-trainee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate/Deactivate Trainee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"_id\": \"{{AddedTraineeID}}\",\r\n    \"isActive\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/activate-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"activate-user"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "Delete Trainee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/delete-trainee?_id={{AddedTraineeID}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"delete-trainee"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedTraineeID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Department",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/delete-department?_id={{AddedDepartmentId}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"delete-department"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedDepartmentId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete department Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/delete-departadmin?_id={{AddedDeptAdmin}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"delete-departadmin"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedDeptAdmin}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Site",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/site?sid={{FirstSiteInAllSites}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"site"
									],
									"query": [
										{
											"key": "sid",
											"value": "{{FirstSiteInAllSites}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete site admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{Base URL}}/delete-user?id={{FirstSiteAdminInListOfSiteAdmins}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"delete-user"
									],
									"query": [
										{
											"key": "id",
											"value": "{{FirstSiteAdminInListOfSiteAdmins}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get company admin details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base URL}}/get-user?_id={{AddCompanyAdminID}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-user"
							],
							"query": [
								{
									"key": "_id",
									"value": "{{AddCompanyAdminID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get user guidence",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base URL}}/get-help-config",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-help-config"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base URL}}/dashboard",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"dashboard"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update company admin details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Api test admin\",\r\n    \"middlename\": \"Admin Test123\",\r\n    \"lastname\": \"Test Admin 1001\",\r\n    \"email\": \"apitestadmin1001@gmail.com\",\r\n    \"_id\": \"{{AddCompanyAdminID}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/update-userinfo",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"update-userinfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user simulations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base URL}}/get_user_sim_ids",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get_user_sim_ids"
							]
						}
					},
					"response": []
				},
				{
					"name": "get site admin simulations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sids\": [\r\n        \"5f4d61204744e55c849c9171\",\r\n        \"6278b73b584729ee5defeb86\",\r\n        \"62268dea4991cb529235c7c5\",\r\n        \"5d81a04c58ebf809657c85a3\",\r\n        \"6529c7ffd137b713dc4f29db\",\r\n        \"65a0d854c7e2fc1823d32083\",\r\n        \"649cb9a51bcd0449ffae54c5\",\r\n        \"659bce68321c4313efce5ed0\",\r\n        \"6230e799d367e007676a8dcf\",\r\n        \"659b9bad321c4302ccce444f\"\r\n    ],\r\n    \"params\": {\r\n        \"draw\": 1,\r\n        \"columns\": [\r\n            {\r\n                \"data\": \"model\",\r\n                \"name\": \"\",\r\n                \"searchable\": true,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"runCount\",\r\n                \"name\": \"\",\r\n                \"searchable\": false,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"name\",\r\n                \"name\": \"\",\r\n                \"searchable\": true,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"startTime\",\r\n                \"name\": \"\",\r\n                \"searchable\": false,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            }\r\n        ],\r\n        \"order\": [\r\n            {\r\n                \"column\": 0,\r\n                \"dir\": \"asc\"\r\n            }\r\n        ],\r\n        \"start\": 0,\r\n        \"length\": 10,\r\n        \"search\": {\r\n            \"value\": \"\",\r\n            \"regex\": false\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/get-site-admin-sims",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-site-admin-sims"
							]
						}
					},
					"response": []
				},
				{
					"name": "get settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base URL}}/get-settings",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all zones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base URL}}/all-zones",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"all-zones"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all date formats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base URL}}/all-date-formats",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"all-date-formats"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all Tutorials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"title\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"state\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"author\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"publishedDate\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"tutorialName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"tutorialDescription\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"totalNumberOfChapters\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"totalTimeOfTraining\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/get-all-tutorials",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-all-tutorials"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get simulation options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base URL}}/get-simulation-options",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-simulation-options"
							]
						}
					},
					"response": []
				},
				{
					"name": "student runs-Reports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"model\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"exercise\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"startedAt\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"totalTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"runid\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"startTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"stopTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 4,\r\n            \"dir\": \"desc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/student-runs",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"student-runs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trainee Sessions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastLogged\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"startTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"stopTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"model\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"exercise\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 3,\r\n            \"dir\": \"des\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/get-trainee-sessions",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-trainee-sessions"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{generatedToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
							"const tokenLength = 55;",
							"",
							"function generateRandomToken() {",
							"    let token = '';",
							"    for (let i = 0; i < tokenLength; i++) {",
							"        token += characters.charAt(Math.floor(Math.random() * characters.length));",
							"    }",
							"    return token;",
							"}",
							"",
							"const randomToken = generateRandomToken();",
							"",
							"",
							"pm.globals.set(\"generatedToken\", randomToken);",
							"",
							"",
							"console.log(randomToken);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Negative Path-Company Admin",
			"item": [
				{
					"name": "Site Admin",
					"item": [
						{
							"name": "SSO exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        result += characters.charAt(Math.floor(Math.random() * characters.length));\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"pm.collectionVariables.set('randomString', generateRandomString(10)); \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/sso-exists/{{randomString}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"sso-exists",
										"{{randomString}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "End point mistake- get all site admins",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(pm.collectionVariables.get(\"token2\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"middlename\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"role\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/users-role?role=siteadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"users-role"
									],
									"query": [
										{
											"key": "role",
											"value": "siteadmin"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Incorrect end point-add site admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"DemoApiSiteAdmin\",\r\n    \"middlename\": \"DemoApiSiteAdmin\",\r\n    \"lastname\": \"DemoApiSiteAdmin\",\r\n    \"email\": \"demositeadmin@gmail.com\",\r\n    \"password\": \"Demositeadmin@123\",\r\n    \"repeatPassword\": \"Demositeadmin@123\",\r\n    \"role\": \"siteadmin\",\r\n    \"instructor\": true,\r\n    \"companyid\": \"{{CompIDWithCompAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/add-user/agstd",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"add-user",
										"agstd"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing Required field-add site admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"DemoApiSiteAdmin100\",\r\n    \"middlename\": \"DemoApiSiteAdmin\",\r\n    \"lastname\": \"DemoApiSiteAdmin\",\r\n   //\"email\": \"demositeadmin121@gmail.com\",\r\n    \"password\": \"Demositeadmin@123\",\r\n    \"repeatPassword\": \"Demositeadmin@123\",\r\n    \"role\": \"siteadmin\",\r\n    \"instructor\": true,\r\n    \"companyid\": \"{{CompIDWithCompAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/add-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"add-user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Duplicate email-add site admin With login SSO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"aaa1\",\r\n    \"middlename\": \"aaa1\",\r\n    \"lastname\": \"aaa1\",\r\n    \"email\": \"aaa1@s.com\",\r\n    \"password\": \"9FoW2g)7nn#s3b\",\r\n    \"repeatPassword\": \"9FoW2g)7vv#s3b\",\r\n    \"role\": \"siteadmin\",\r\n    \"instructor\": true,\r\n    \"companyid\": \"{{CompIDWithCompAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/add-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"add-user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Non-existing ID-get edit site admin details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomHex(length) {\r",
											"    const characters = '0123456789abcdefg';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        result += characters.charAt(Math.floor(Math.random() * characters.length));\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"pm.collectionVariables.set('randomHex', generateRandomHex(15)); \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-user-by-id?id={{randomHex}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-user-by-id"
									],
									"query": [
										{
											"key": "id",
											"value": "{{randomHex}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid end point-get edit site admin details Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomHex(length) {\r",
											"    const characters = '0123456789abcdefg';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        result += characters.charAt(Math.floor(Math.random() * characters.length));\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"pm.collectionVariables.set('randomHex', generateRandomHex(15)); \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-user-by{{randomString}}-id?id={{GetASiteAdminToEdit}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-user-by{{randomString}}-id"
									],
									"query": [
										{
											"key": "id",
											"value": "{{GetASiteAdminToEdit}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing Required Field-Update site admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"_id\": \"{{GetASiteAdminToEdit}}\",\r\n    \"firstname\": \"EditSite11\",\r\n    \"middlename\": null,\r\n    \"lastname\": \"EditSite1\",\r\n   // \"email\": \"ass11@v.com\",\r\n    \"password\": \"EditSite@1231\",\r\n    \"repeatPassword\": \"EditSite1@123\",\r\n    \"role\": \"siteadmin\",\r\n    \"instructor\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/update-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"update-user"
									]
								}
							},
							"response": []
						}
					],
					"description": "Below are the Apis under Site Admin."
				},
				{
					"name": "Sites",
					"item": [
						{
							"name": "add site",
							"item": [
								{
									"name": "In valid end point-get company simulations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{Base URL}}/get-company-simulations/{{RandomString}}",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-company-simulations",
												"{{RandomString}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid end point-get company tutorials",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{Base URL}}/get-company-tutorials{{randomString}}",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-company-tutorials{{randomString}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Non-existing CID-get site admin list",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{Base URL}}/user-list-by-role?cid={{randomHex}}&role=siteadmin",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"user-list-by-role"
											],
											"query": [
												{
													"key": "cid",
													"value": "{{randomHex}}"
												},
												{
													"key": "role",
													"value": "siteadmin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid Role parameter-get site admin list Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"const responseData = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Response body is an array\", function () {\r",
													"    pm.expect(responseData).to.be.an(\"array\");\r",
													"});\r",
													"\r",
													"pm.test(\"Each object has the expected structure\", function () {\r",
													"    responseData.forEach(function (obj) {\r",
													"        pm.expect(obj).to.have.all.keys(\"_id\", \"firstname\",\"middlename\", \"lastname\");\r",
													"        pm.expect(obj._id).to.be.a(\"string\");\r",
													"        pm.expect(obj.firstname).to.be.a(\"string\");\r",
													"        pm.expect(obj.lastname).to.be.a(\"string\");\r",
													"    });\r",
													"});\r",
													"\r",
													"pm.test(\"Each object's _id is not empty\", function () {\r",
													"    responseData.forEach(function (obj) {\r",
													"        pm.expect(obj._id).to.not.be.empty;\r",
													"    });\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{Base URL}}/user-list-by-role?cid={{CompIDWithCompAdmin}}&role={{randomString}}",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"user-list-by-role"
											],
											"query": [
												{
													"key": "cid",
													"value": "{{CompIDWithCompAdmin}}"
												},
												{
													"key": "role",
													"value": "{{randomString}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid end point-add site by filling all fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"_id\": null,\r\n    \"siteName\": \"testsite11\",\r\n    \"location\": \"testsite1\",\r\n    \"tutorials\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"simulations\": [\r\n        {\r\n            \"id\": \"659b9bad321c4302ccce444f\"\r\n        }\r\n    ],\r\n    \"companyId\": \"{{CompIDWithCompAdmin}}\",\r\n    \"readAdmins\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"writeAdmins\": [\r\n        {\r\n            \"id\": \"65b9f3146c599896e61eecc5\"\r\n        }\r\n    ],\r\n    \"createdAt\": null,\r\n    \"updatedAt\": null,\r\n    \"createdBy\": null,\r\n    \"updatedBy\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/site{{randomString}}",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"site{{randomString}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Missing Required Field-add site by filling required fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {\r",
													"    pm.response.to.have.status(422);\r",
													"});\r",
													"\r",
													"let jsonObject = pm.response.json();\r",
													"\r",
													"pm.test(\"Response is an object\", function () {\r",
													"    pm.expect(jsonObject).to.be.an('object');\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Value of 'success' property is false\", function () {\r",
													"    pm.expect(jsonObject.success).to.be.false;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Error property exists and is a string\", function () {\r",
													"    pm.expect(jsonObject).to.have.property('error');\r",
													"    pm.expect(jsonObject.error).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Error message contains expected content\", function () {\r",
													"    pm.expect(jsonObject.error).to.include(\"Site validation failed: siteName: Path `siteName` is required.\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"_id\": null,\r\n    //\"siteName\": \"testnarisite\",\r\n    \"location\": null,\r\n    \"tutorials\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"simulations\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"companyId\": \"{{CompIDWithCompAdmin}}\",\r\n    \"readAdmins\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"writeAdmins\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"createdAt\": null,\r\n    \"updatedAt\": null,\r\n    \"createdBy\": null,\r\n    \"updatedBy\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/site",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid end point-get all sites",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"siteName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"location\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"simCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"isActive\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"deptCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"traineeCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/get-all-sites{{RandomString}}",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-all-sites{{RandomString}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "edit site",
							"item": [
								{
									"name": "Invalid Site ID-get site to edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/get-site?_id={{randomHex}}",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"get-site"
											],
											"query": [
												{
													"key": "_id",
													"value": "{{randomHex}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid end point-update site",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CompanyAdminToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"_id\": \"{{FirstSiteInAllSites}}\",\r\n    \"siteName\": \"testsite11\",\r\n    \"location\": \"testsite1\",\r\n    \"tutorials\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"simulations\": [\r\n        {\r\n            \"id\": \"659b9bad321c4302ccce444f\"\r\n        }\r\n    ],\r\n    \"companyId\": \"65c350333090a85224d0a40a\",\r\n    \"readAdmins\": [\r\n        {\r\n            \"id\": null\r\n        }\r\n    ],\r\n    \"writeAdmins\": [\r\n        {\r\n            \"id\": \"65c355f63090a8d958d0ade9\"\r\n        }\r\n    ],\r\n    \"createdAt\": null,\r\n    \"updatedAt\": null,\r\n    \"createdBy\": null,\r\n    \"updatedBy\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base URL}}/site{{randomString}}",
											"host": [
												"{{Base URL}}"
											],
											"path": [
												"site{{randomString}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Department Admins",
					"item": [
						{
							"name": "Invalid end point-SSO exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/sso-exists{{RandomString}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"sso-exists{{RandomString}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid end point-get settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-settings{{randomString}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-settings{{randomString}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Duplicate User-add department admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status is 422 \", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"var jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Value of 'success' property is false\", function () {\r",
											"    pm.expect(jsonObject.success).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Error property exists and is a string\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('error');\r",
											"    pm.expect(jsonObject.error).to.be.a('string');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"TestDeptAdmin111\",\r\n    \"lastname\": \"TestDeptAdmin111\",\r\n    \"email\": \"testdeptadmin11111@gmail.com\",\r\n    \"password\": \"Testdeptadmin@123\",\r\n    \"_id\": null,\r\n    \"instructor\": true,\r\n    \"loginsso\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-departadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-departadmin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing required field-add department admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status is 422 \", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"TestDeptAdmin111\",\r\n    \"lastname\": \"TestDeptAdmin111\",\r\n    \"email\": null,\r\n    \"password\": \"Testdeptadmin@123\",\r\n    \"_id\": null,\r\n    \"instructor\": true,\r\n    \"loginsso\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-departadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-departadmin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid ID-get a department admin to edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-departadmin-withid?_id={{randomHex}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-departadmin-withid"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{randomHex}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid end point-get a department admin to edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-departadmin-{{RandomString}}-withid?_id={{AddedDeptAdmin}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-departadmin-{{RandomString}}-withid"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedDeptAdmin}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing required field-update department admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"TestDeptAdmin\",\r\n    \"middlename\": \"TestEdit1\",\r\n    \"lastname\": \"TestDeptAdmin\",\r\n    \"username\": \"testdeptadmin@gmail.com\",\r\n    \"email\": null,\r\n    \"password\": \"Testdeptadmin@123\",\r\n    \"_id\": \"{{AddedDeptAdmin}}\",\r\n    \"instructor\": true,\r\n    \"loginsso\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/edit-departadmin",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"edit-departadmin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid end point-get department admins",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"middlename\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastLoggedInDate\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-departadmin/{{randomString}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-departadmin",
										"{{randomString}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"var jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Value of 'success' property is false\", function () {\r",
											"    pm.expect(jsonObject.success).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Error property exists and is an object\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('error');\r",
											"    pm.expect(jsonObject.error).to.be.an('object');\r",
											"});\r",
											"pm.test(\"Error message is 'Invalid Email.'\", function () {\r",
											"    pm.expect(jsonObject.error.data.message).to.equal(\"Invalid Email.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-user-with-email?searchemail={{EmailOfFirstDeptAdmin}}&_id=null",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-user-with-email"
									],
									"query": [
										{
											"key": "searchemail",
											"value": "{{EmailOfFirstDeptAdmin}}"
										},
										{
											"key": "_id",
											"value": "null"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Departments",
					"item": [
						{
							"name": "Create department with duplicate name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Value of 'success' property is false\", function () {\r",
											"    pm.expect(jsonObject.success).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Error property exists and is a string\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('error');\r",
											"    pm.expect(jsonObject.error).to.be.a('string');\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Techdept1212\",\r\n    \"location\": \"Hyd\",\r\n    \"departadmin\": [\r\n        {\r\n            \"username\": \"{{EmailOfFirstDeptAdmin}}\",\r\n            \"id\": \"{{ID_OfFirstDeptAdmin}}\"\r\n        }\r\n    ],\r\n    \"sites\": [\r\n        {\r\n            \"id\": \"{{FirstSiteInAllSites}}\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-department",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing Required field-Create department",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"let jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Value of 'success' property is false\", function () {\r",
											"    pm.expect(jsonObject.success).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Error property exists and is a string\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('error');\r",
											"    pm.expect(jsonObject.error).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Error message contains expected content\", function () {\r",
											"    pm.expect(jsonObject.error).to.include(\"Department validation failed\");\r",
											"    pm.expect(jsonObject.error).to.include(\"departmentName: Path `departmentName` is required.\");\r",
											"});\r",
											"\r",
											"// Add more test cases as needed...\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    //\"departmentName\": \"Techdept1212\",\r\n    \"location\": \"Hyd\",\r\n    \"departadmin\": [\r\n        {\r\n            \"username\": \"{{EmailOfFirstDeptAdmin}}\",\r\n            \"id\": \"{{ID_OfFirstDeptAdmin}}\"\r\n        }\r\n    ],\r\n    \"sites\": [\r\n        {\r\n            \"id\": \"{{FirstSiteInAllSites}}\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-department",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid end point-Get departments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"departmentName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"location\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"isActive\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"siteName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"traineeCount\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-department/{{RandomString}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-department",
										"{{RandomString}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid dept ID-Get department to edit",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"departmentName\": \"Techdepts\",\r\n    \"location\": \"Hyd\",\r\n    \"departadmin\": [\r\n        {\r\n            \"username\": \"dept11111@gmail.com\",\r\n            \"id\": \"65af54028d7f2c80f60da5ec\"\r\n        }\r\n    ],\r\n    \"sites\": [\r\n        {\r\n            \"id\": \"65af5ad78d7f2c3a090daa93\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-department-with-id?_id={{randomHex}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-department-with-id"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{randomHex}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing required field-Edit department",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.clear()"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Response status is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"let jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Value of 'success' property is false\", function () {\r",
											"    pm.expect(jsonObject.success).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Error property exists and is a string\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('error');\r",
											"    pm.expect(jsonObject.error).to.be.a('string');\r",
											"})\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"departmentName\": null,\r\n    \"location\": \"Hyd\",\r\n    \"departadmin\": [\r\n        {\r\n            \"_id\": \"65ba2c496c59985e751f0b60\",\r\n            \"username\": \"dept11111@gmail.com\",\r\n            \"id\": \"65af54028d7f2c80f60da5ec\"\r\n        }\r\n    ],\r\n    \"sites\": [\r\n        {\r\n            \"_id\": \"65ba2c496c599864e91f0b61\",\r\n            \"id\": \"65af5ad78d7f2c3a090daa93\"\r\n        }\r\n    ],\r\n    \"_id\": \"{{AddedDepartmentId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/edit-department",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"edit-department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search departments with existing dept name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"let jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Value of 'success' property is false\", function () {\r",
											"    pm.expect(jsonObject.success).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Error property exists and is an object\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('error');\r",
											"    pm.expect(jsonObject.error).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Data property exists and is an object\", function () {\r",
											"    pm.expect(jsonObject.error).to.have.property('data');\r",
											"    pm.expect(jsonObject.error.data).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is 'Invalid Name.'\", function () {\r",
											"    pm.expect(jsonObject.error.data.message).to.equal(\"Invalid Name.\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-department-with-name?search_depName={{FirstDeptOfAllDepts}}&_id=null",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-department-with-name"
									],
									"query": [
										{
											"key": "search_depName",
											"value": "{{FirstDeptOfAllDepts}}"
										},
										{
											"key": "_id",
											"value": "null"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid end point-get sites",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}get-sites/{{randomString}}",
									"host": [
										"{{Base URL}}get-sites"
									],
									"path": [
										"{{randomString}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid end point-get department admins",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-departadmins/{{RandomString}}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-departadmins",
										"{{RandomString}}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Trainees",
					"item": [
						{
							"name": "Invalid end point-Get trainees",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"departName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastLoggedInDate\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"isActive\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastActiveAt\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"departid\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"siteid\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 3,\r\n            \"dir\": \"des\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-trainee{{RandomString}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-trainee{{RandomString}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Without request body-Get trainees",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"\r",
											"\r",
											"let jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Error property exists and is an empty object\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('error');\r",
											"    pm.expect(jsonObject.error).to.be.an('object').that.is.empty;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-trainee",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-trainee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid end point-SSO exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/sso-exists/{{randomString}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"sso-exists",
										"{{randomString}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get sites for trainee form",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-sites{{randomString}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-sites{{randomString}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid site Id-get departments based on site",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/get-site-depts?sid={{randomHex}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-site-depts"
									],
									"query": [
										{
											"key": "sid",
											"value": "{{randomHex}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Trainee with duplicate value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"let jsonObject = pm.response.json();\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(jsonObject).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Value of 'success' property is false\", function () {\r",
											"    pm.expect(jsonObject.success).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Error property exists and is a string\", function () {\r",
											"    pm.expect(jsonObject).to.have.property('error');\r",
											"    pm.expect(jsonObject.error).to.be.a('string');\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Apitesttrainee\",\r\n    \"middlename\": \"Apitesttrainee\",\r\n    \"lastname\": \"Apitesttrainee\",\r\n    \"email\": \"apitesttrainee@gmail.com\",\r\n    \"department\": {\r\n        \"_id\": \"{{DeptID_BasedOnSite}}\",\r\n        \"departmentName\": \"{{DeptNameBasedOnSite}}\"\r\n    },\r\n    \"departid\": \"{{DeptID_BasedOnSite}}\",\r\n    \"password\": \"Apitesttrainee@123\",\r\n    \"site\": {\r\n        \"id\": \"{{FirstSiteInAllSites}}\",\r\n        \"name\": \"{{FirstSiteNameInAllSites}}\"\r\n    },\r\n    \"instructor\": true,\r\n    \"loginSSO\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-trainee",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-trainee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing required field-Create Trainee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Apitesttrainee\",\r\n    \"middlename\": \"Apitesttrainee\",\r\n    \"lastname\": \"Apitesttrainee\",\r\n   // \"email\": \"apitesttrainee@gmail.com\",\r\n    \"department\": {\r\n        \"_id\": \"{{DeptID_BasedOnSite}}\",\r\n        \"departmentName\": \"{{DeptNameBasedOnSite}}\"\r\n    },\r\n    \"departid\": \"{{DeptID_BasedOnSite}}\",\r\n    \"password\": \"Apitesttrainee@123\",\r\n    \"site\": {\r\n        \"id\": \"{{FirstSiteInAllSites}}\",\r\n        \"name\": \"{{FirstSiteNameInAllSites}}\"\r\n    },\r\n    \"instructor\": true,\r\n    \"loginSSO\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/create-trainee",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"create-trainee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid Id-Get trainee with Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"  "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/get-trainee-with-id?_id={{randomHex}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"get-trainee-with-id"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{randomHex}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid end point-Edit trainee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Testtrainee121\",\r\n    \"middlename\": \"Testtrainee121\",\r\n    \"lastname\": \"Testtrainee\",\r\n    \"username\": \"testtrainee112@gmail.com\",\r\n    \"email\": \"testtrainee112@gmail.com\",\r\n    \"department\": {\r\n        \"id\": \"{{DeptID_BasedOnSite}}\",\r\n        \"departmentName\": \"{{DeptNameBasedOnSite}}\",\r\n        \"_id\": \"{{DeptID_BasedOnSite}}\"\r\n    },\r\n    \"departid\": \"{{DeptID_BasedOnSite}}\",\r\n    \"password\": \"Testtrainee12@123\",\r\n    \"_id\": \"{{AddedTraineeID}}\",\r\n    \"site\": {\r\n        \"id\":\"{{FirstSiteInAllSites}}\",\r\n        \"name\": \"{{FirstSiteNameInAllSites}}\"\r\n    },\r\n    \"instructor\": true,\r\n    \"loginSSO\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/edit-trainee/{{RandomString}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"edit-trainee",
										"{{RandomString}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replaced boolean with string-Activate/Deactivate Trainee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"_id\": \"{{AddedTraineeID}}\",\r\n    \"isActive\":{{RandomString}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base URL}}/activate-user",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"activate-user"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "Delete same trainee multiple times",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Value of 'deletedCount' property is 0\", function () {\r",
											"    let jsonObject = pm.response.json();\r",
											"    pm.expect(jsonObject.data.deletedCount).to.equal(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/delete-trainee?_id={{AddedTraineeID}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"delete-trainee"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedTraineeID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete same  Department multiple times",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/delete-department?_id={{RandomString}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"delete-department"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{RandomString}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete same department Admin multiple times",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Value of 'deletedCount' property is 0\", function () {\r",
											"    let jsonObject = pm.response.json();\r",
											"    pm.expect(jsonObject.data.deletedCount).to.equal(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/delete-departadmin?_id={{AddedDeptAdmin}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"delete-departadmin"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{AddedDeptAdmin}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid ID-Delete Site",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/site?sid={{randomHex}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"site"
									],
									"query": [
										{
											"key": "sid",
											"value": "{{randomHex}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete site admin multiple times with same ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CompanyAdminToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base URL}}/delete-user?id={{GetASiteAdminToEdit}}",
									"host": [
										"{{Base URL}}"
									],
									"path": [
										"delete-user"
									],
									"query": [
										{
											"key": "id",
											"value": "{{GetASiteAdminToEdit}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get company admin details-Invalid end point",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/get-user?_id={{RandomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-user"
							],
							"query": [
								{
									"key": "_id",
									"value": "{{RandomString}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get user guidence-Invalid end point",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/get-help-config/{{RandomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-help-config",
								"{{RandomString}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard-Invalid end point",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/dashboard/{{RandomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"dashboard",
								"{{RandomString}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update company admin details-Invalid end point",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Api test admin\",\r\n    \"middlename\": \"Admin Test123\",\r\n    \"lastname\": \"Test Admin 1001\",\r\n    \"email\": \"apitestadmin1001@gmail.com\",\r\n    \"_id\": \"{{AddCompanyAdminID}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/update-userinfo{{randomHex}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"update-userinfo{{randomHex}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user simulations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/get_user_sim_ids{{RandomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get_user_sim_ids{{RandomString}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get site admin simulations-Invalid end point",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sids\": [\r\n        \"5f4d61204744e55c849c9171\",\r\n        \"6278b73b584729ee5defeb86\",\r\n        \"62268dea4991cb529235c7c5\",\r\n        \"5d81a04c58ebf809657c85a3\",\r\n        \"6529c7ffd137b713dc4f29db\",\r\n        \"65a0d854c7e2fc1823d32083\",\r\n        \"649cb9a51bcd0449ffae54c5\",\r\n        \"659bce68321c4313efce5ed0\",\r\n        \"6230e799d367e007676a8dcf\",\r\n        \"659b9bad321c4302ccce444f\"\r\n    ],\r\n    \"params\": {\r\n        \"draw\": 1,\r\n        \"columns\": [\r\n            {\r\n                \"data\": \"model\",\r\n                \"name\": \"\",\r\n                \"searchable\": true,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"runCount\",\r\n                \"name\": \"\",\r\n                \"searchable\": false,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"name\",\r\n                \"name\": \"\",\r\n                \"searchable\": true,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"startTime\",\r\n                \"name\": \"\",\r\n                \"searchable\": false,\r\n                \"orderable\": true,\r\n                \"search\": {\r\n                    \"value\": \"\",\r\n                    \"regex\": false\r\n                }\r\n            }\r\n        ],\r\n        \"order\": [\r\n            {\r\n                \"column\": 0,\r\n                \"dir\": \"asc\"\r\n            }\r\n        ],\r\n        \"start\": 0,\r\n        \"length\": 10,\r\n        \"search\": {\r\n            \"value\": \"\",\r\n            \"regex\": false\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/get-site-admin-sims/{{randomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-site-admin-sims",
								"{{randomString}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get settings-Invalid end point",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/get-settings/{{RandomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-settings",
								"{{RandomString}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all zones-Invalid end point",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/all-zones/{{randomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"all-zones",
								"{{randomString}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all date formats-Invalid end point",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/all-date-formats{{RandomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"all-date-formats{{RandomString}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all Tutorials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"title\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"state\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"author\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"publishedDate\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"tutorialName\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"tutorialDescription\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"totalNumberOfChapters\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"totalTimeOfTraining\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 0,\r\n            \"dir\": \"asc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/get-all-tutorials/{{randomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-all-tutorials",
								"{{randomString}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get simulation options-Invalid end point",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/get-simulation-options/{{RandomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-simulation-options",
								"{{RandomString}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "student runs-Reports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"model\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"exercise\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"startedAt\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"totalTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"runid\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"startTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"stopTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": false,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 4,\r\n            \"dir\": \"desc\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/student-runs/{{RandomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"student-runs",
								"{{RandomString}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trainee Sessions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 404 OK\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"draw\": 1,\r\n    \"columns\": [\r\n        {\r\n            \"data\": \"firstname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastname\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"email\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"lastLogged\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"startTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"stopTime\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"model\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        },\r\n        {\r\n            \"data\": \"exercise\",\r\n            \"name\": \"\",\r\n            \"searchable\": true,\r\n            \"orderable\": true,\r\n            \"search\": {\r\n                \"value\": \"\",\r\n                \"regex\": false\r\n            }\r\n        }\r\n    ],\r\n    \"order\": [\r\n        {\r\n            \"column\": 3,\r\n            \"dir\": \"des\"\r\n        }\r\n    ],\r\n    \"start\": 0,\r\n    \"length\": 10,\r\n    \"search\": {\r\n        \"value\": \"\",\r\n        \"regex\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/get-trainee-sessions/{{RandomString}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"get-trainee-sessions",
								"{{RandomString}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete Trainee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let jsonObject = pm.response.json();\r",
									"\r",
									"pm.test(\"Response is an object\", function () {\r",
									"    pm.expect(jsonObject).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test(\"Value of 'success' property is true\", function () {\r",
									"    pm.expect(jsonObject.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Data property exists and is an object\", function () {\r",
									"    pm.expect(jsonObject).to.have.property('data');\r",
									"    pm.expect(jsonObject.data).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test(\"Value of 'deletedCount' property is 1\", function () {\r",
									"    pm.expect(jsonObject.data.deletedCount).to.equal(1);\r",
									"});\r",
									"pm.collectionVariables.unset(\"AddedTraineeID\");\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/delete-trainee?_id={{AddedTraineeID}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"delete-trainee"
							],
							"query": [
								{
									"key": "_id",
									"value": "{{AddedTraineeID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Department",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"The value of success is true\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"   pm.expect(jsonData.success).to.be.true\r",
									"});\r",
									"pm.collectionVariables.unset(\"AddedDepartmentId\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/delete-department?_id={{AddedDepartmentId}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"delete-department"
							],
							"query": [
								{
									"key": "_id",
									"value": "{{AddedDepartmentId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete department Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let jsonObject = pm.response.json();\r",
									"\r",
									"pm.test(\"Response is an object\", function () {\r",
									"    pm.expect(jsonObject).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test(\"Value of 'success' property is true\", function () {\r",
									"    pm.expect(jsonObject.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Data property exists and is an object\", function () {\r",
									"    pm.expect(jsonObject).to.have.property('data');\r",
									"    pm.expect(jsonObject.data).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test(\"Value of 'deletedCount' property is 1\", function () {\r",
									"    pm.expect(jsonObject.data.deletedCount).to.equal(1);\r",
									"});\r",
									"pm.collectionVariables.unset(\"AddedDeptAdmin\");\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/delete-departadmin?_id={{AddedDeptAdmin}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"delete-departadmin"
							],
							"query": [
								{
									"key": "_id",
									"value": "{{AddedDeptAdmin}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let jsonObject = pm.response.json();\r",
									"\r",
									"pm.test(\"Response is an object\", function () {\r",
									"    pm.expect(jsonObject).to.be.an('object');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Value of 'deletedCount' property is 1\", function () {\r",
									"    pm.expect(jsonObject.success.deletedCount).to.equal(1);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.unset(\"Addsite1ID\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/site?sid={{Addsite1ID}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"site"
							],
							"query": [
								{
									"key": "sid",
									"value": "{{Addsite1ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete site admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Value of 'deletedCount' property is 1\", function () {\r",
									"    let jsonObject = pm.response.json();\r",
									"    pm.expect(jsonObject.deletedCount).to.equal(1);\r",
									"});\r",
									"pm.collectionVariables.unset(\"SecondSiteAdminInListOfSiteAdmins\");\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CompanyAdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Base URL}}/delete-user?id={{SecondSiteAdminInListOfSiteAdmins}}",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"delete-user"
							],
							"query": [
								{
									"key": "id",
									"value": "{{SecondSiteAdminInListOfSiteAdmins}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token2",
			"value": "{{CompanyAdminToken}}",
			"type": "string"
		},
		{
			"key": "GetASiteAdminToEdit",
			"value": "65c355f63090a8d958d0ade9",
			"disabled": true
		},
		{
			"key": "FirstAdminInListOfAdmins",
			"value": "65c5b5a950ff428fb930818b",
			"disabled": true
		},
		{
			"key": "FirstSiteInAllSites",
			"value": "65cde52fd542898953aa0914",
			"disabled": true
		},
		{
			"key": "AddedDeptAdmin",
			"value": "65cdeea0d542897e7baa4ac8",
			"disabled": true
		},
		{
			"key": "EmailOfFirstDeptAdmin",
			"value": "demoapideptadmin@gmail.com",
			"disabled": true
		},
		{
			"key": "ID_OfFirstDeptAdmin",
			"value": "65cded27d54289548caa48c3",
			"disabled": true
		},
		{
			"key": "AddedDepartmentId",
			"value": "65ceffc7225af07304d802c7",
			"disabled": true
		},
		{
			"key": "FirstDeptOfAllDepts",
			"value": "Techdept1211",
			"disabled": true
		},
		{
			"key": "RandomString",
			"value": "OljLC93Ueq",
			"disabled": true
		},
		{
			"key": "DeptID_BasedOnSite",
			"value": "65cdefc8d542895367aa4bc3",
			"disabled": true
		},
		{
			"key": "DeptNameBasedOnSite",
			"value": "Techdeptapi",
			"disabled": true
		},
		{
			"key": "FirstSiteNameInAllSites",
			"value": "apitestsite1",
			"disabled": true
		},
		{
			"key": "AddedTraineeID",
			"value": "65cf1da5225af0eacdd80803",
			"disabled": true
		},
		{
			"key": "randomString",
			"value": "78iWDASVmf",
			"disabled": true
		},
		{
			"key": "randomHex",
			"value": "971acg86166g48c",
			"disabled": true
		},
		{
			"key": "FirstSiteAdminInListOfSiteAdmins",
			"value": "65c9b8f6f86a64b81b089794",
			"disabled": true
		},
		{
			"key": "SecondSiteAdminInListOfSiteAdmins",
			"value": "65cf022d225af01cbed80358",
			"disabled": true
		},
		{
			"key": "SecondSiteNameInAllSites",
			"value": "testsite1212",
			"disabled": true
		},
		{
			"key": "SecondSiteInAllSites",
			"value": "65cf0122225af02161d802f9",
			"disabled": true
		},
		{
			"key": "Addsite1",
			"value": "",
			"disabled": true
		},
		{
			"key": "Addsite1ID",
			"value": "",
			"disabled": true
		},
		{
			"key": "Addsite1Name",
			"value": "",
			"disabled": true
		},
		{
			"key": "Addsite1Name",
			"value": ""
		},
		{
			"key": "EmailOfFirstDeptAdmin",
			"value": ""
		},
		{
			"key": "ID_OfFirstDeptAdmin",
			"value": ""
		},
		{
			"key": "FirstDeptOfAllDepts",
			"value": ""
		},
		{
			"key": "departadmin_id",
			"value": ""
		},
		{
			"key": "departadmin_username",
			"value": ""
		},
		{
			"key": "departadmin_id_value",
			"value": ""
		},
		{
			"key": "sites_id",
			"value": ""
		},
		{
			"key": "sites_id_value",
			"value": ""
		},
		{
			"key": "RandomString",
			"value": ""
		},
		{
			"key": "FirstSiteID_Trainee",
			"value": ""
		},
		{
			"key": "FirstSiteName_Trainee",
			"value": ""
		},
		{
			"key": "DeptID_BasedOnSite",
			"value": ""
		},
		{
			"key": "DeptNameBasedOnSite",
			"value": ""
		},
		{
			"key": "FirstDepartmentID_Trainee",
			"value": ""
		},
		{
			"key": "FirstDepartmentName_Trainee",
			"value": ""
		}
	]
}